// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type FlowlogInitParameters struct {

	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	// The S3 bucket name of an existing IONOS Cloud S3 bucket. Immutable, forces re-recreation of the nic resource.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// [string] A name of that Network Load Balancer.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type FlowlogObservation struct {

	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	// The S3 bucket name of an existing IONOS Cloud S3 bucket. Immutable, forces re-recreation of the nic resource.
	Bucket *string `json:"bucket,omitempty" tf:"bucket,omitempty"`

	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.
	Direction *string `json:"direction,omitempty" tf:"direction,omitempty"`

	// The resource's unique identifier.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [string] A name of that Network Load Balancer.
	// The resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type FlowlogParameters struct {

	// [string] Specifies the action to be taken when the rule is matched. Possible values: ACCEPTED, REJECTED, ALL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: ACCEPTED, REJECTED, ALL. Immutable, forces re-recreation of the nic resource.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// [string] Specifies the S3 IONOS bucket where the flow log data will be stored. The bucket must exist. Immutable, forces re-creation.
	// The S3 bucket name of an existing IONOS Cloud S3 bucket. Immutable, forces re-recreation of the nic resource.
	// +kubebuilder:validation:Optional
	Bucket *string `json:"bucket" tf:"bucket,omitempty"`

	// [string] Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-creation.
	// Specifies the traffic direction pattern. Valid values: INGRESS, EGRESS, BIDIRECTIONAL. Immutable, forces re-recreation of the nic resource.
	// +kubebuilder:validation:Optional
	Direction *string `json:"direction" tf:"direction,omitempty"`

	// [string] A name of that Network Load Balancer.
	// The resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type NetworkloadbalancerInitParameters struct {

	// [bool] Turn logging on and off for this product. Default value is 'false'.
	// Turn logging on and off for this product. Default value is 'false'.
	CentralLogging *bool `json:"centralLogging,omitempty" tf:"central_logging,omitempty"`

	// [string] A Datacenter's UUID.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Datacenter
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.Reference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.Selector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
	// Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination
	// IP addresses, source and destination ports, number of packets, amount of bytes,
	// the start and end time of the recording, and the type of protocol –
	// and log the extent to which your instances are being accessed.
	Flowlog *FlowlogInitParameters `json:"flowlog,omitempty" tf:"flowlog,omitempty"`

	// [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	// Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	Ips []*string `json:"ips,omitempty" tf:"ips,omitempty"`

	// [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	// Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	LBPrivateIps []*string `json:"lbPrivateIps,omitempty" tf:"lb_private_ips,omitempty"`

	// [int] Id of the listening LAN. (inbound)
	// Id of the listening LAN. (inbound)
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Lan
	ListenerLan *float64 `json:"listenerLan,omitempty" tf:"listener_lan,omitempty"`

	// Reference to a Lan in compute to populate listenerLan.
	// +kubebuilder:validation:Optional
	ListenerLanRef *v1.Reference `json:"listenerLanRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate listenerLan.
	// +kubebuilder:validation:Optional
	ListenerLanSelector *v1.Selector `json:"listenerLanSelector,omitempty" tf:"-"`

	// Specifies the format of the logs.
	LoggingFormat *string `json:"loggingFormat,omitempty" tf:"logging_format,omitempty"`

	// [string] A name of that Network Load Balancer.
	// A name of that Network Load Balancer
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [int] Id of the balanced private target LAN. (outbound)
	// Id of the balanced private target LAN. (outbound)
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Lan
	TargetLan *float64 `json:"targetLan,omitempty" tf:"target_lan,omitempty"`

	// Reference to a Lan in compute to populate targetLan.
	// +kubebuilder:validation:Optional
	TargetLanRef *v1.Reference `json:"targetLanRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate targetLan.
	// +kubebuilder:validation:Optional
	TargetLanSelector *v1.Selector `json:"targetLanSelector,omitempty" tf:"-"`
}

type NetworkloadbalancerObservation struct {

	// [bool] Turn logging on and off for this product. Default value is 'false'.
	// Turn logging on and off for this product. Default value is 'false'.
	CentralLogging *bool `json:"centralLogging,omitempty" tf:"central_logging,omitempty"`

	// [string] A Datacenter's UUID.
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
	// Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination
	// IP addresses, source and destination ports, number of packets, amount of bytes,
	// the start and end time of the recording, and the type of protocol –
	// and log the extent to which your instances are being accessed.
	Flowlog *FlowlogObservation `json:"flowlog,omitempty" tf:"flowlog,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	// Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	Ips []*string `json:"ips,omitempty" tf:"ips,omitempty"`

	// [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	// Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	LBPrivateIps []*string `json:"lbPrivateIps,omitempty" tf:"lb_private_ips,omitempty"`

	// [int] Id of the listening LAN. (inbound)
	// Id of the listening LAN. (inbound)
	ListenerLan *float64 `json:"listenerLan,omitempty" tf:"listener_lan,omitempty"`

	// Specifies the format of the logs.
	LoggingFormat *string `json:"loggingFormat,omitempty" tf:"logging_format,omitempty"`

	// [string] A name of that Network Load Balancer.
	// A name of that Network Load Balancer
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [int] Id of the balanced private target LAN. (outbound)
	// Id of the balanced private target LAN. (outbound)
	TargetLan *float64 `json:"targetLan,omitempty" tf:"target_lan,omitempty"`
}

type NetworkloadbalancerParameters struct {

	// [bool] Turn logging on and off for this product. Default value is 'false'.
	// Turn logging on and off for this product. Default value is 'false'.
	// +kubebuilder:validation:Optional
	CentralLogging *bool `json:"centralLogging,omitempty" tf:"central_logging,omitempty"`

	// [string] A Datacenter's UUID.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Datacenter
	// +kubebuilder:validation:Optional
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.Reference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.Selector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// [list] Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination IP addresses, source and destination ports, number of packets, amount of bytes, the start and end time of the recording, and the type of protocol – and log the extent to which your instances are being accessed.
	// Only 1 flow log can be configured. Only the name field can change as part of an update. Flow logs holistically capture network information such as source and destination
	// IP addresses, source and destination ports, number of packets, amount of bytes,
	// the start and end time of the recording, and the type of protocol –
	// and log the extent to which your instances are being accessed.
	// +kubebuilder:validation:Optional
	Flowlog *FlowlogParameters `json:"flowlog,omitempty" tf:"flowlog,omitempty"`

	// [list] Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	// Collection of IP addresses of the Network Load Balancer. (inbound and outbound) IP of the listenerLan must be a customer reserved IP for the public load balancer and private IP for the private load balancer.
	// +kubebuilder:validation:Optional
	Ips []*string `json:"ips,omitempty" tf:"ips,omitempty"`

	// [list] Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	// Collection of private IP addresses with subnet mask of the Network Load Balancer. IPs must contain valid subnet mask. If user will not provide any IP then the system will generate one IP with /24 subnet.
	// +kubebuilder:validation:Optional
	LBPrivateIps []*string `json:"lbPrivateIps,omitempty" tf:"lb_private_ips,omitempty"`

	// [int] Id of the listening LAN. (inbound)
	// Id of the listening LAN. (inbound)
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Lan
	// +kubebuilder:validation:Optional
	ListenerLan *float64 `json:"listenerLan,omitempty" tf:"listener_lan,omitempty"`

	// Reference to a Lan in compute to populate listenerLan.
	// +kubebuilder:validation:Optional
	ListenerLanRef *v1.Reference `json:"listenerLanRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate listenerLan.
	// +kubebuilder:validation:Optional
	ListenerLanSelector *v1.Selector `json:"listenerLanSelector,omitempty" tf:"-"`

	// Specifies the format of the logs.
	// +kubebuilder:validation:Optional
	LoggingFormat *string `json:"loggingFormat,omitempty" tf:"logging_format,omitempty"`

	// [string] A name of that Network Load Balancer.
	// A name of that Network Load Balancer
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [int] Id of the balanced private target LAN. (outbound)
	// Id of the balanced private target LAN. (outbound)
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.Lan
	// +kubebuilder:validation:Optional
	TargetLan *float64 `json:"targetLan,omitempty" tf:"target_lan,omitempty"`

	// Reference to a Lan in compute to populate targetLan.
	// +kubebuilder:validation:Optional
	TargetLanRef *v1.Reference `json:"targetLanRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate targetLan.
	// +kubebuilder:validation:Optional
	TargetLanSelector *v1.Selector `json:"targetLanSelector,omitempty" tf:"-"`
}

// NetworkloadbalancerSpec defines the desired state of Networkloadbalancer
type NetworkloadbalancerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkloadbalancerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkloadbalancerInitParameters `json:"initProvider,omitempty"`
}

// NetworkloadbalancerStatus defines the observed state of Networkloadbalancer.
type NetworkloadbalancerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkloadbalancerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Networkloadbalancer is the Schema for the Networkloadbalancers API. Creates and manages Network Load Balancer objects.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ionos}
type Networkloadbalancer struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   NetworkloadbalancerSpec   `json:"spec"`
	Status NetworkloadbalancerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkloadbalancerList contains a list of Networkloadbalancers
type NetworkloadbalancerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Networkloadbalancer `json:"items"`
}

// Repository type metadata.
var (
	Networkloadbalancer_Kind             = "Networkloadbalancer"
	Networkloadbalancer_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Networkloadbalancer_Kind}.String()
	Networkloadbalancer_KindAPIVersion   = Networkloadbalancer_Kind + "." + CRDGroupVersion.String()
	Networkloadbalancer_GroupVersionKind = CRDGroupVersion.WithKind(Networkloadbalancer_Kind)
)

func init() {
	SchemeBuilder.Register(&Networkloadbalancer{}, &NetworkloadbalancerList{})
}
