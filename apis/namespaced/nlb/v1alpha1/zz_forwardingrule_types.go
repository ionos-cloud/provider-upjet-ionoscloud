// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ForwardingruleInitParameters struct {

	// [string] Algorithm for the balancing.
	// Algorithm for the balancing.
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// [string] A Datacenter's UUID.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/namespaced/compute/v1alpha1.Datacenter
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.NamespacedReference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.NamespacedSelector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule
	HealthCheck *HealthCheckInitParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// [string] Listening IP. (inbound)
	// Listening IP. (inbound)
	ListenerIP *string `json:"listenerIp,omitempty" tf:"listener_ip,omitempty"`

	// [int] Listening port number. (inbound) (range: 1 to 65535)
	// Listening port number. (inbound) (range: 1 to 65535)
	ListenerPort *float64 `json:"listenerPort,omitempty" tf:"listener_port,omitempty"`

	// [string] A name of that Network Load Balancer forwarding rule.
	// A name of that Network Load Balancer forwarding rule
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/namespaced/nlb/v1alpha1.Networkloadbalancer
	NetworkloadbalancerID *string `json:"networkloadbalancerId,omitempty" tf:"networkloadbalancer_id,omitempty"`

	// Reference to a Networkloadbalancer in nlb to populate networkloadbalancerId.
	// +kubebuilder:validation:Optional
	NetworkloadbalancerIDRef *v1.NamespacedReference `json:"networkloadbalancerIdRef,omitempty" tf:"-"`

	// Selector for a Networkloadbalancer in nlb to populate networkloadbalancerId.
	// +kubebuilder:validation:Optional
	NetworkloadbalancerIDSelector *v1.NamespacedSelector `json:"networkloadbalancerIdSelector,omitempty" tf:"-"`

	// [string] Protocol of the balancing.
	// Protocol of the balancing.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// [Set] Array of items in that collection.
	// Array of items in that collection
	Targets []TargetsInitParameters `json:"targets,omitempty" tf:"targets,omitempty"`
}

type ForwardingruleObservation struct {

	// [string] Algorithm for the balancing.
	// Algorithm for the balancing.
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// [string] A Datacenter's UUID.
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule
	HealthCheck *HealthCheckObservation `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [string] Listening IP. (inbound)
	// Listening IP. (inbound)
	ListenerIP *string `json:"listenerIp,omitempty" tf:"listener_ip,omitempty"`

	// [int] Listening port number. (inbound) (range: 1 to 65535)
	// Listening port number. (inbound) (range: 1 to 65535)
	ListenerPort *float64 `json:"listenerPort,omitempty" tf:"listener_port,omitempty"`

	// [string] A name of that Network Load Balancer forwarding rule.
	// A name of that Network Load Balancer forwarding rule
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	NetworkloadbalancerID *string `json:"networkloadbalancerId,omitempty" tf:"networkloadbalancer_id,omitempty"`

	// [string] Protocol of the balancing.
	// Protocol of the balancing.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// [Set] Array of items in that collection.
	// Array of items in that collection
	Targets []TargetsObservation `json:"targets,omitempty" tf:"targets,omitempty"`
}

type ForwardingruleParameters struct {

	// [string] Algorithm for the balancing.
	// Algorithm for the balancing.
	// +kubebuilder:validation:Optional
	Algorithm *string `json:"algorithm,omitempty" tf:"algorithm,omitempty"`

	// [string] A Datacenter's UUID.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/namespaced/compute/v1alpha1.Datacenter
	// +kubebuilder:validation:Optional
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.NamespacedReference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.NamespacedSelector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule
	// +kubebuilder:validation:Optional
	HealthCheck *HealthCheckParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// [string] Listening IP. (inbound)
	// Listening IP. (inbound)
	// +kubebuilder:validation:Optional
	ListenerIP *string `json:"listenerIp,omitempty" tf:"listener_ip,omitempty"`

	// [int] Listening port number. (inbound) (range: 1 to 65535)
	// Listening port number. (inbound) (range: 1 to 65535)
	// +kubebuilder:validation:Optional
	ListenerPort *float64 `json:"listenerPort,omitempty" tf:"listener_port,omitempty"`

	// [string] A name of that Network Load Balancer forwarding rule.
	// A name of that Network Load Balancer forwarding rule
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/namespaced/nlb/v1alpha1.Networkloadbalancer
	// +kubebuilder:validation:Optional
	NetworkloadbalancerID *string `json:"networkloadbalancerId,omitempty" tf:"networkloadbalancer_id,omitempty"`

	// Reference to a Networkloadbalancer in nlb to populate networkloadbalancerId.
	// +kubebuilder:validation:Optional
	NetworkloadbalancerIDRef *v1.NamespacedReference `json:"networkloadbalancerIdRef,omitempty" tf:"-"`

	// Selector for a Networkloadbalancer in nlb to populate networkloadbalancerId.
	// +kubebuilder:validation:Optional
	NetworkloadbalancerIDSelector *v1.NamespacedSelector `json:"networkloadbalancerIdSelector,omitempty" tf:"-"`

	// [string] Protocol of the balancing.
	// Protocol of the balancing.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// [Set] Array of items in that collection.
	// Array of items in that collection
	// +kubebuilder:validation:Optional
	Targets []TargetsParameters `json:"targets,omitempty" tf:"targets,omitempty"`
}

type HealthCheckInitParameters struct {

	// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout *float64 `json:"clientTimeout,omitempty" tf:"client_timeout,omitempty"`

	// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout *float64 `json:"connectTimeout,omitempty" tf:"connect_timeout,omitempty"`

	// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries *float64 `json:"retries,omitempty" tf:"retries,omitempty"`

	// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout *float64 `json:"targetTimeout,omitempty" tf:"target_timeout,omitempty"`
}

type HealthCheckObservation struct {

	// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	ClientTimeout *float64 `json:"clientTimeout,omitempty" tf:"client_timeout,omitempty"`

	// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	ConnectTimeout *float64 `json:"connectTimeout,omitempty" tf:"connect_timeout,omitempty"`

	// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	Retries *float64 `json:"retries,omitempty" tf:"retries,omitempty"`

	// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	TargetTimeout *float64 `json:"targetTimeout,omitempty" tf:"target_timeout,omitempty"`
}

type HealthCheckParameters struct {

	// [int] ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	// ClientTimeout is expressed in milliseconds. This inactivity timeout applies when the client is expected to acknowledge or send data. If unset the default of 50 seconds will be used.
	// +kubebuilder:validation:Optional
	ClientTimeout *float64 `json:"clientTimeout,omitempty" tf:"client_timeout,omitempty"`

	// [int] It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	// It specifies the maximum time (in milliseconds) to wait for a connection attempt to a target VM to succeed. If unset, the default of 5 seconds will be used.
	// +kubebuilder:validation:Optional
	ConnectTimeout *float64 `json:"connectTimeout,omitempty" tf:"connect_timeout,omitempty"`

	// [int] Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	// Retries specifies the number of retries to perform on a target VM after a connection failure. If unset, the default value of 3 will be used.
	// +kubebuilder:validation:Optional
	Retries *float64 `json:"retries,omitempty" tf:"retries,omitempty"`

	// [int] TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	// TargetTimeout specifies the maximum inactivity time (in milliseconds) on the target VM side. If unset, the default of 50 seconds will be used.
	// +kubebuilder:validation:Optional
	TargetTimeout *float64 `json:"targetTimeout,omitempty" tf:"target_timeout,omitempty"`
}

type TargetsHealthCheckInitParameters struct {

	// [boolean] Check specifies whether the target VM's health is checked.
	// Check specifies whether the target VM's health is checked.
	Check *bool `json:"check,omitempty" tf:"check,omitempty"`

	// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval *float64 `json:"checkInterval,omitempty" tf:"check_interval,omitempty"`

	// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance *bool `json:"maintenance,omitempty" tf:"maintenance,omitempty"`
}

type TargetsHealthCheckObservation struct {

	// [boolean] Check specifies whether the target VM's health is checked.
	// Check specifies whether the target VM's health is checked.
	Check *bool `json:"check,omitempty" tf:"check,omitempty"`

	// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	CheckInterval *float64 `json:"checkInterval,omitempty" tf:"check_interval,omitempty"`

	// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	Maintenance *bool `json:"maintenance,omitempty" tf:"maintenance,omitempty"`
}

type TargetsHealthCheckParameters struct {

	// [boolean] Check specifies whether the target VM's health is checked.
	// Check specifies whether the target VM's health is checked.
	// +kubebuilder:validation:Optional
	Check *bool `json:"check,omitempty" tf:"check,omitempty"`

	// [int] CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	// CheckInterval determines the duration (in milliseconds) between consecutive health checks. If unspecified a default of 2000 ms is used.
	// +kubebuilder:validation:Optional
	CheckInterval *float64 `json:"checkInterval,omitempty" tf:"check_interval,omitempty"`

	// [boolean] Maintenance specifies if a target VM should be marked as down, even if it is not.
	// Maintenance specifies if a target VM should be marked as down, even if it is not.
	// +kubebuilder:validation:Optional
	Maintenance *bool `json:"maintenance,omitempty" tf:"maintenance,omitempty"`
}

type TargetsInitParameters struct {

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule target
	HealthCheck *TargetsHealthCheckInitParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// [string] IP of a balanced target VM.
	// IP of a balanced target VM
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// [int] Port of the balanced target service. (range: 1 to 65535).
	// Port of the balanced target service. (range: 1 to 65535)
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// [string] The proxy protocol version. Accepted values are none, v1, v2, v2ssl. If unspecified, the default value of none is used.
	// Proxy protocol version
	ProxyProtocol *string `json:"proxyProtocol,omitempty" tf:"proxy_protocol,omitempty"`

	// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	// Weight parameter is used to adjust the target VM's weight relative to other target VMs
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetsObservation struct {

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule target
	HealthCheck *TargetsHealthCheckObservation `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// [string] IP of a balanced target VM.
	// IP of a balanced target VM
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// [int] Port of the balanced target service. (range: 1 to 65535).
	// Port of the balanced target service. (range: 1 to 65535)
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// [string] The proxy protocol version. Accepted values are none, v1, v2, v2ssl. If unspecified, the default value of none is used.
	// Proxy protocol version
	ProxyProtocol *string `json:"proxyProtocol,omitempty" tf:"proxy_protocol,omitempty"`

	// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	// Weight parameter is used to adjust the target VM's weight relative to other target VMs
	Weight *float64 `json:"weight,omitempty" tf:"weight,omitempty"`
}

type TargetsParameters struct {

	// Health check attributes for Network Load Balancer forwarding rule.
	// Health check attributes for Network Load Balancer forwarding rule target
	// +kubebuilder:validation:Optional
	HealthCheck *TargetsHealthCheckParameters `json:"healthCheck,omitempty" tf:"health_check,omitempty"`

	// [string] IP of a balanced target VM.
	// IP of a balanced target VM
	// +kubebuilder:validation:Optional
	IP *string `json:"ip" tf:"ip,omitempty"`

	// [int] Port of the balanced target service. (range: 1 to 65535).
	// Port of the balanced target service. (range: 1 to 65535)
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port" tf:"port,omitempty"`

	// [string] The proxy protocol version. Accepted values are none, v1, v2, v2ssl. If unspecified, the default value of none is used.
	// Proxy protocol version
	// +kubebuilder:validation:Optional
	ProxyProtocol *string `json:"proxyProtocol,omitempty" tf:"proxy_protocol,omitempty"`

	// [int] Weight parameter is used to adjust the target VM's weight relative to other target VMs.
	// Weight parameter is used to adjust the target VM's weight relative to other target VMs
	// +kubebuilder:validation:Optional
	Weight *float64 `json:"weight" tf:"weight,omitempty"`
}

// ForwardingruleSpec defines the desired state of Forwardingrule
type ForwardingruleSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ForwardingruleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ForwardingruleInitParameters `json:"initProvider,omitempty"`
}

// ForwardingruleStatus defines the observed state of Forwardingrule.
type ForwardingruleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ForwardingruleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Forwardingrule is the Schema for the Forwardingrules API. Creates and manages Network Load Balancer Forwarding Rule objects.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,ionos}
type Forwardingrule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.algorithm) || (has(self.initProvider) && has(self.initProvider.algorithm))",message="spec.forProvider.algorithm is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.listenerIp) || (has(self.initProvider) && has(self.initProvider.listenerIp))",message="spec.forProvider.listenerIp is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.listenerPort) || (has(self.initProvider) && has(self.initProvider.listenerPort))",message="spec.forProvider.listenerPort is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targets) || (has(self.initProvider) && has(self.initProvider.targets))",message="spec.forProvider.targets is a required parameter"
	Spec   ForwardingruleSpec   `json:"spec"`
	Status ForwardingruleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ForwardingruleList contains a list of Forwardingrules
type ForwardingruleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Forwardingrule `json:"items"`
}

// Repository type metadata.
var (
	Forwardingrule_Kind             = "Forwardingrule"
	Forwardingrule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Forwardingrule_Kind}.String()
	Forwardingrule_KindAPIVersion   = Forwardingrule_Kind + "." + CRDGroupVersion.String()
	Forwardingrule_GroupVersionKind = CRDGroupVersion.WithKind(Forwardingrule_Kind)
)

func init() {
	SchemeBuilder.Register(&Forwardingrule{}, &ForwardingruleList{})
}
