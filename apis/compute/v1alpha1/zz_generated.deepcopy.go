//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUArchitectureInitParameters) DeepCopyInto(out *CPUArchitectureInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUArchitectureInitParameters.
func (in *CPUArchitectureInitParameters) DeepCopy() *CPUArchitectureInitParameters {
	if in == nil {
		return nil
	}
	out := new(CPUArchitectureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUArchitectureObservation) DeepCopyInto(out *CPUArchitectureObservation) {
	*out = *in
	if in.CPUFamily != nil {
		in, out := &in.CPUFamily, &out.CPUFamily
		*out = new(string)
		**out = **in
	}
	if in.MaxCores != nil {
		in, out := &in.MaxCores, &out.MaxCores
		*out = new(float64)
		**out = **in
	}
	if in.MaxRAM != nil {
		in, out := &in.MaxRAM, &out.MaxRAM
		*out = new(float64)
		**out = **in
	}
	if in.Vendor != nil {
		in, out := &in.Vendor, &out.Vendor
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUArchitectureObservation.
func (in *CPUArchitectureObservation) DeepCopy() *CPUArchitectureObservation {
	if in == nil {
		return nil
	}
	out := new(CPUArchitectureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CPUArchitectureParameters) DeepCopyInto(out *CPUArchitectureParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CPUArchitectureParameters.
func (in *CPUArchitectureParameters) DeepCopy() *CPUArchitectureParameters {
	if in == nil {
		return nil
	}
	out := new(CPUArchitectureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectableDatacentersInitParameters) DeepCopyInto(out *ConnectableDatacentersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectableDatacentersInitParameters.
func (in *ConnectableDatacentersInitParameters) DeepCopy() *ConnectableDatacentersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectableDatacentersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectableDatacentersObservation) DeepCopyInto(out *ConnectableDatacentersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectableDatacentersObservation.
func (in *ConnectableDatacentersObservation) DeepCopy() *ConnectableDatacentersObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectableDatacentersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectableDatacentersParameters) DeepCopyInto(out *ConnectableDatacentersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectableDatacentersParameters.
func (in *ConnectableDatacentersParameters) DeepCopy() *ConnectableDatacentersParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectableDatacentersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Crossconnect) DeepCopyInto(out *Crossconnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Crossconnect.
func (in *Crossconnect) DeepCopy() *Crossconnect {
	if in == nil {
		return nil
	}
	out := new(Crossconnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Crossconnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectInitParameters) DeepCopyInto(out *CrossconnectInitParameters) {
	*out = *in
	if in.ConnectableDatacenters != nil {
		in, out := &in.ConnectableDatacenters, &out.ConnectableDatacenters
		*out = make([]ConnectableDatacentersInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]PeersInitParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectInitParameters.
func (in *CrossconnectInitParameters) DeepCopy() *CrossconnectInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossconnectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectList) DeepCopyInto(out *CrossconnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Crossconnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectList.
func (in *CrossconnectList) DeepCopy() *CrossconnectList {
	if in == nil {
		return nil
	}
	out := new(CrossconnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossconnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectObservation) DeepCopyInto(out *CrossconnectObservation) {
	*out = *in
	if in.ConnectableDatacenters != nil {
		in, out := &in.ConnectableDatacenters, &out.ConnectableDatacenters
		*out = make([]ConnectableDatacentersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]PeersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectObservation.
func (in *CrossconnectObservation) DeepCopy() *CrossconnectObservation {
	if in == nil {
		return nil
	}
	out := new(CrossconnectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectParameters) DeepCopyInto(out *CrossconnectParameters) {
	*out = *in
	if in.ConnectableDatacenters != nil {
		in, out := &in.ConnectableDatacenters, &out.ConnectableDatacenters
		*out = make([]ConnectableDatacentersParameters, len(*in))
		copy(*out, *in)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Peers != nil {
		in, out := &in.Peers, &out.Peers
		*out = make([]PeersParameters, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectParameters.
func (in *CrossconnectParameters) DeepCopy() *CrossconnectParameters {
	if in == nil {
		return nil
	}
	out := new(CrossconnectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectSpec) DeepCopyInto(out *CrossconnectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectSpec.
func (in *CrossconnectSpec) DeepCopy() *CrossconnectSpec {
	if in == nil {
		return nil
	}
	out := new(CrossconnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossconnectStatus) DeepCopyInto(out *CrossconnectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossconnectStatus.
func (in *CrossconnectStatus) DeepCopy() *CrossconnectStatus {
	if in == nil {
		return nil
	}
	out := new(CrossconnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Datacenter) DeepCopyInto(out *Datacenter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Datacenter.
func (in *Datacenter) DeepCopy() *Datacenter {
	if in == nil {
		return nil
	}
	out := new(Datacenter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Datacenter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterInitParameters) DeepCopyInto(out *DatacenterInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecAuthProtection != nil {
		in, out := &in.SecAuthProtection, &out.SecAuthProtection
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterInitParameters.
func (in *DatacenterInitParameters) DeepCopy() *DatacenterInitParameters {
	if in == nil {
		return nil
	}
	out := new(DatacenterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterList) DeepCopyInto(out *DatacenterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Datacenter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterList.
func (in *DatacenterList) DeepCopy() *DatacenterList {
	if in == nil {
		return nil
	}
	out := new(DatacenterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DatacenterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterObservation) DeepCopyInto(out *DatacenterObservation) {
	*out = *in
	if in.CPUArchitecture != nil {
		in, out := &in.CPUArchitecture, &out.CPUArchitecture
		*out = make([]CPUArchitectureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecAuthProtection != nil {
		in, out := &in.SecAuthProtection, &out.SecAuthProtection
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterObservation.
func (in *DatacenterObservation) DeepCopy() *DatacenterObservation {
	if in == nil {
		return nil
	}
	out := new(DatacenterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterParameters) DeepCopyInto(out *DatacenterParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecAuthProtection != nil {
		in, out := &in.SecAuthProtection, &out.SecAuthProtection
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterParameters.
func (in *DatacenterParameters) DeepCopy() *DatacenterParameters {
	if in == nil {
		return nil
	}
	out := new(DatacenterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterSpec) DeepCopyInto(out *DatacenterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterSpec.
func (in *DatacenterSpec) DeepCopy() *DatacenterSpec {
	if in == nil {
		return nil
	}
	out := new(DatacenterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DatacenterStatus) DeepCopyInto(out *DatacenterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DatacenterStatus.
func (in *DatacenterStatus) DeepCopy() *DatacenterStatus {
	if in == nil {
		return nil
	}
	out := new(DatacenterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallInitParameters) DeepCopyInto(out *FirewallInitParameters) {
	*out = *in
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(string)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.PortRangeStart != nil {
		in, out := &in.PortRangeStart, &out.PortRangeStart
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourceMac != nil {
		in, out := &in.SourceMac, &out.SourceMac
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallInitParameters.
func (in *FirewallInitParameters) DeepCopy() *FirewallInitParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallObservation) DeepCopyInto(out *FirewallObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(string)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.PortRangeStart != nil {
		in, out := &in.PortRangeStart, &out.PortRangeStart
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourceMac != nil {
		in, out := &in.SourceMac, &out.SourceMac
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallObservation.
func (in *FirewallObservation) DeepCopy() *FirewallObservation {
	if in == nil {
		return nil
	}
	out := new(FirewallObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FirewallParameters) DeepCopyInto(out *FirewallParameters) {
	*out = *in
	if in.IcmpCode != nil {
		in, out := &in.IcmpCode, &out.IcmpCode
		*out = new(string)
		**out = **in
	}
	if in.IcmpType != nil {
		in, out := &in.IcmpType, &out.IcmpType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PortRangeEnd != nil {
		in, out := &in.PortRangeEnd, &out.PortRangeEnd
		*out = new(float64)
		**out = **in
	}
	if in.PortRangeStart != nil {
		in, out := &in.PortRangeStart, &out.PortRangeStart
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.SourceIP != nil {
		in, out := &in.SourceIP, &out.SourceIP
		*out = new(string)
		**out = **in
	}
	if in.SourceMac != nil {
		in, out := &in.SourceMac, &out.SourceMac
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FirewallParameters.
func (in *FirewallParameters) DeepCopy() *FirewallParameters {
	if in == nil {
		return nil
	}
	out := new(FirewallParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowlogInitParameters) DeepCopyInto(out *FlowlogInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowlogInitParameters.
func (in *FlowlogInitParameters) DeepCopy() *FlowlogInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlowlogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowlogObservation) DeepCopyInto(out *FlowlogObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowlogObservation.
func (in *FlowlogObservation) DeepCopy() *FlowlogObservation {
	if in == nil {
		return nil
	}
	out := new(FlowlogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowlogParameters) DeepCopyInto(out *FlowlogParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowlogParameters.
func (in *FlowlogParameters) DeepCopy() *FlowlogParameters {
	if in == nil {
		return nil
	}
	out := new(FlowlogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.AccessActivityLog != nil {
		in, out := &in.AccessActivityLog, &out.AccessActivityLog
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageCertificates != nil {
		in, out := &in.AccessAndManageCertificates, &out.AccessAndManageCertificates
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageMonitoring != nil {
		in, out := &in.AccessAndManageMonitoring, &out.AccessAndManageMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.CreateBackupUnit != nil {
		in, out := &in.CreateBackupUnit, &out.CreateBackupUnit
		*out = new(bool)
		**out = **in
	}
	if in.CreateDatacenter != nil {
		in, out := &in.CreateDatacenter, &out.CreateDatacenter
		*out = new(bool)
		**out = **in
	}
	if in.CreateFlowLog != nil {
		in, out := &in.CreateFlowLog, &out.CreateFlowLog
		*out = new(bool)
		**out = **in
	}
	if in.CreateInternetAccess != nil {
		in, out := &in.CreateInternetAccess, &out.CreateInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.CreateK8SCluster != nil {
		in, out := &in.CreateK8SCluster, &out.CreateK8SCluster
		*out = new(bool)
		**out = **in
	}
	if in.CreatePcc != nil {
		in, out := &in.CreatePcc, &out.CreatePcc
		*out = new(bool)
		**out = **in
	}
	if in.CreateSnapshot != nil {
		in, out := &in.CreateSnapshot, &out.CreateSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.ManageDbaas != nil {
		in, out := &in.ManageDbaas, &out.ManageDbaas
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReserveIP != nil {
		in, out := &in.ReserveIP, &out.ReserveIP
		*out = new(bool)
		**out = **in
	}
	if in.S3Privilege != nil {
		in, out := &in.S3Privilege, &out.S3Privilege
		*out = new(bool)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserIds != nil {
		in, out := &in.UserIds, &out.UserIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserIdsRefs != nil {
		in, out := &in.UserIdsRefs, &out.UserIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserIdsSelector != nil {
		in, out := &in.UserIdsSelector, &out.UserIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.AccessActivityLog != nil {
		in, out := &in.AccessActivityLog, &out.AccessActivityLog
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageCertificates != nil {
		in, out := &in.AccessAndManageCertificates, &out.AccessAndManageCertificates
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageMonitoring != nil {
		in, out := &in.AccessAndManageMonitoring, &out.AccessAndManageMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.CreateBackupUnit != nil {
		in, out := &in.CreateBackupUnit, &out.CreateBackupUnit
		*out = new(bool)
		**out = **in
	}
	if in.CreateDatacenter != nil {
		in, out := &in.CreateDatacenter, &out.CreateDatacenter
		*out = new(bool)
		**out = **in
	}
	if in.CreateFlowLog != nil {
		in, out := &in.CreateFlowLog, &out.CreateFlowLog
		*out = new(bool)
		**out = **in
	}
	if in.CreateInternetAccess != nil {
		in, out := &in.CreateInternetAccess, &out.CreateInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.CreateK8SCluster != nil {
		in, out := &in.CreateK8SCluster, &out.CreateK8SCluster
		*out = new(bool)
		**out = **in
	}
	if in.CreatePcc != nil {
		in, out := &in.CreatePcc, &out.CreatePcc
		*out = new(bool)
		**out = **in
	}
	if in.CreateSnapshot != nil {
		in, out := &in.CreateSnapshot, &out.CreateSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManageDbaas != nil {
		in, out := &in.ManageDbaas, &out.ManageDbaas
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReserveIP != nil {
		in, out := &in.ReserveIP, &out.ReserveIP
		*out = new(bool)
		**out = **in
	}
	if in.S3Privilege != nil {
		in, out := &in.S3Privilege, &out.S3Privilege
		*out = new(bool)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserIds != nil {
		in, out := &in.UserIds, &out.UserIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]UsersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.AccessActivityLog != nil {
		in, out := &in.AccessActivityLog, &out.AccessActivityLog
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageCertificates != nil {
		in, out := &in.AccessAndManageCertificates, &out.AccessAndManageCertificates
		*out = new(bool)
		**out = **in
	}
	if in.AccessAndManageMonitoring != nil {
		in, out := &in.AccessAndManageMonitoring, &out.AccessAndManageMonitoring
		*out = new(bool)
		**out = **in
	}
	if in.CreateBackupUnit != nil {
		in, out := &in.CreateBackupUnit, &out.CreateBackupUnit
		*out = new(bool)
		**out = **in
	}
	if in.CreateDatacenter != nil {
		in, out := &in.CreateDatacenter, &out.CreateDatacenter
		*out = new(bool)
		**out = **in
	}
	if in.CreateFlowLog != nil {
		in, out := &in.CreateFlowLog, &out.CreateFlowLog
		*out = new(bool)
		**out = **in
	}
	if in.CreateInternetAccess != nil {
		in, out := &in.CreateInternetAccess, &out.CreateInternetAccess
		*out = new(bool)
		**out = **in
	}
	if in.CreateK8SCluster != nil {
		in, out := &in.CreateK8SCluster, &out.CreateK8SCluster
		*out = new(bool)
		**out = **in
	}
	if in.CreatePcc != nil {
		in, out := &in.CreatePcc, &out.CreatePcc
		*out = new(bool)
		**out = **in
	}
	if in.CreateSnapshot != nil {
		in, out := &in.CreateSnapshot, &out.CreateSnapshot
		*out = new(bool)
		**out = **in
	}
	if in.ManageDbaas != nil {
		in, out := &in.ManageDbaas, &out.ManageDbaas
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReserveIP != nil {
		in, out := &in.ReserveIP, &out.ReserveIP
		*out = new(bool)
		**out = **in
	}
	if in.S3Privilege != nil {
		in, out := &in.S3Privilege, &out.S3Privilege
		*out = new(bool)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserIds != nil {
		in, out := &in.UserIds, &out.UserIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserIdsRefs != nil {
		in, out := &in.UserIdsRefs, &out.UserIdsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UserIdsSelector != nil {
		in, out := &in.UserIdsSelector, &out.UserIdsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConsumersInitParameters) DeepCopyInto(out *IPConsumersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConsumersInitParameters.
func (in *IPConsumersInitParameters) DeepCopy() *IPConsumersInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPConsumersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConsumersObservation) DeepCopyInto(out *IPConsumersObservation) {
	*out = *in
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterName != nil {
		in, out := &in.DatacenterName, &out.DatacenterName
		*out = new(string)
		**out = **in
	}
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.K8SClusterUUID != nil {
		in, out := &in.K8SClusterUUID, &out.K8SClusterUUID
		*out = new(string)
		**out = **in
	}
	if in.K8SNodepoolUUID != nil {
		in, out := &in.K8SNodepoolUUID, &out.K8SNodepoolUUID
		*out = new(string)
		**out = **in
	}
	if in.Mac != nil {
		in, out := &in.Mac, &out.Mac
		*out = new(string)
		**out = **in
	}
	if in.NicID != nil {
		in, out := &in.NicID, &out.NicID
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerName != nil {
		in, out := &in.ServerName, &out.ServerName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConsumersObservation.
func (in *IPConsumersObservation) DeepCopy() *IPConsumersObservation {
	if in == nil {
		return nil
	}
	out := new(IPConsumersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPConsumersParameters) DeepCopyInto(out *IPConsumersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPConsumersParameters.
func (in *IPConsumersParameters) DeepCopy() *IPConsumersParameters {
	if in == nil {
		return nil
	}
	out := new(IPConsumersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFailoverInitParameters) DeepCopyInto(out *IPFailoverInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFailoverInitParameters.
func (in *IPFailoverInitParameters) DeepCopy() *IPFailoverInitParameters {
	if in == nil {
		return nil
	}
	out := new(IPFailoverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFailoverObservation) DeepCopyInto(out *IPFailoverObservation) {
	*out = *in
	if in.IP != nil {
		in, out := &in.IP, &out.IP
		*out = new(string)
		**out = **in
	}
	if in.NicUUID != nil {
		in, out := &in.NicUUID, &out.NicUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFailoverObservation.
func (in *IPFailoverObservation) DeepCopy() *IPFailoverObservation {
	if in == nil {
		return nil
	}
	out := new(IPFailoverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPFailoverParameters) DeepCopyInto(out *IPFailoverParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPFailoverParameters.
func (in *IPFailoverParameters) DeepCopy() *IPFailoverParameters {
	if in == nil {
		return nil
	}
	out := new(IPFailoverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipblock) DeepCopyInto(out *Ipblock) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipblock.
func (in *Ipblock) DeepCopy() *Ipblock {
	if in == nil {
		return nil
	}
	out := new(Ipblock)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ipblock) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockInitParameters) DeepCopyInto(out *IpblockInitParameters) {
	*out = *in
	if in.IPConsumers != nil {
		in, out := &in.IPConsumers, &out.IPConsumers
		*out = make([]IPConsumersInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockInitParameters.
func (in *IpblockInitParameters) DeepCopy() *IpblockInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpblockInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockList) DeepCopyInto(out *IpblockList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ipblock, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockList.
func (in *IpblockList) DeepCopy() *IpblockList {
	if in == nil {
		return nil
	}
	out := new(IpblockList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpblockList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockObservation) DeepCopyInto(out *IpblockObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPConsumers != nil {
		in, out := &in.IPConsumers, &out.IPConsumers
		*out = make([]IPConsumersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockObservation.
func (in *IpblockObservation) DeepCopy() *IpblockObservation {
	if in == nil {
		return nil
	}
	out := new(IpblockObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockParameters) DeepCopyInto(out *IpblockParameters) {
	*out = *in
	if in.IPConsumers != nil {
		in, out := &in.IPConsumers, &out.IPConsumers
		*out = make([]IPConsumersParameters, len(*in))
		copy(*out, *in)
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockParameters.
func (in *IpblockParameters) DeepCopy() *IpblockParameters {
	if in == nil {
		return nil
	}
	out := new(IpblockParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockSpec) DeepCopyInto(out *IpblockSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockSpec.
func (in *IpblockSpec) DeepCopy() *IpblockSpec {
	if in == nil {
		return nil
	}
	out := new(IpblockSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpblockStatus) DeepCopyInto(out *IpblockStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpblockStatus.
func (in *IpblockStatus) DeepCopy() *IpblockStatus {
	if in == nil {
		return nil
	}
	out := new(IpblockStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelInitParameters) DeepCopyInto(out *LabelInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelInitParameters.
func (in *LabelInitParameters) DeepCopy() *LabelInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelObservation) DeepCopyInto(out *LabelObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelObservation.
func (in *LabelObservation) DeepCopy() *LabelObservation {
	if in == nil {
		return nil
	}
	out := new(LabelObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelParameters) DeepCopyInto(out *LabelParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelParameters.
func (in *LabelParameters) DeepCopy() *LabelParameters {
	if in == nil {
		return nil
	}
	out := new(LabelParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lan) DeepCopyInto(out *Lan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lan.
func (in *Lan) DeepCopy() *Lan {
	if in == nil {
		return nil
	}
	out := new(Lan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Lan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanInitParameters) DeepCopyInto(out *LanInitParameters) {
	*out = *in
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPFailover != nil {
		in, out := &in.IPFailover, &out.IPFailover
		*out = make([]IPFailoverInitParameters, len(*in))
		copy(*out, *in)
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pcc != nil {
		in, out := &in.Pcc, &out.Pcc
		*out = new(string)
		**out = **in
	}
	if in.PccRef != nil {
		in, out := &in.PccRef, &out.PccRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PccSelector != nil {
		in, out := &in.PccSelector, &out.PccSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanInitParameters.
func (in *LanInitParameters) DeepCopy() *LanInitParameters {
	if in == nil {
		return nil
	}
	out := new(LanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanList) DeepCopyInto(out *LanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Lan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanList.
func (in *LanList) DeepCopy() *LanList {
	if in == nil {
		return nil
	}
	out := new(LanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanObservation) DeepCopyInto(out *LanObservation) {
	*out = *in
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPFailover != nil {
		in, out := &in.IPFailover, &out.IPFailover
		*out = make([]IPFailoverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pcc != nil {
		in, out := &in.Pcc, &out.Pcc
		*out = new(string)
		**out = **in
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanObservation.
func (in *LanObservation) DeepCopy() *LanObservation {
	if in == nil {
		return nil
	}
	out := new(LanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanParameters) DeepCopyInto(out *LanParameters) {
	*out = *in
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IPFailover != nil {
		in, out := &in.IPFailover, &out.IPFailover
		*out = make([]IPFailoverParameters, len(*in))
		copy(*out, *in)
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pcc != nil {
		in, out := &in.Pcc, &out.Pcc
		*out = new(string)
		**out = **in
	}
	if in.PccRef != nil {
		in, out := &in.PccRef, &out.PccRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PccSelector != nil {
		in, out := &in.PccSelector, &out.PccSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Public != nil {
		in, out := &in.Public, &out.Public
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanParameters.
func (in *LanParameters) DeepCopy() *LanParameters {
	if in == nil {
		return nil
	}
	out := new(LanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanSpec) DeepCopyInto(out *LanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanSpec.
func (in *LanSpec) DeepCopy() *LanSpec {
	if in == nil {
		return nil
	}
	out := new(LanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LanStatus) DeepCopyInto(out *LanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LanStatus.
func (in *LanStatus) DeepCopy() *LanStatus {
	if in == nil {
		return nil
	}
	out := new(LanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Nic) DeepCopyInto(out *Nic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Nic.
func (in *Nic) DeepCopy() *Nic {
	if in == nil {
		return nil
	}
	out := new(Nic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Nic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicInitParameters) DeepCopyInto(out *NicInitParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.Flowlog != nil {
		in, out := &in.Flowlog, &out.Flowlog
		*out = make([]FlowlogInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.LanRef != nil {
		in, out := &in.LanRef, &out.LanRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LanSelector != nil {
		in, out := &in.LanSelector, &out.LanSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicInitParameters.
func (in *NicInitParameters) DeepCopy() *NicInitParameters {
	if in == nil {
		return nil
	}
	out := new(NicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicList) DeepCopyInto(out *NicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Nic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicList.
func (in *NicList) DeepCopy() *NicList {
	if in == nil {
		return nil
	}
	out := new(NicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicObservation) DeepCopyInto(out *NicObservation) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DeviceNumber != nil {
		in, out := &in.DeviceNumber, &out.DeviceNumber
		*out = new(float64)
		**out = **in
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.Flowlog != nil {
		in, out := &in.Flowlog, &out.Flowlog
		*out = make([]FlowlogObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.Mac != nil {
		in, out := &in.Mac, &out.Mac
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PciSlot != nil {
		in, out := &in.PciSlot, &out.PciSlot
		*out = new(float64)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicObservation.
func (in *NicObservation) DeepCopy() *NicObservation {
	if in == nil {
		return nil
	}
	out := new(NicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicParameters) DeepCopyInto(out *NicParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.Flowlog != nil {
		in, out := &in.Flowlog, &out.Flowlog
		*out = make([]FlowlogParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.LanRef != nil {
		in, out := &in.LanRef, &out.LanRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LanSelector != nil {
		in, out := &in.LanSelector, &out.LanSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicParameters.
func (in *NicParameters) DeepCopy() *NicParameters {
	if in == nil {
		return nil
	}
	out := new(NicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicSpec) DeepCopyInto(out *NicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicSpec.
func (in *NicSpec) DeepCopy() *NicSpec {
	if in == nil {
		return nil
	}
	out := new(NicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NicStatus) DeepCopyInto(out *NicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NicStatus.
func (in *NicStatus) DeepCopy() *NicStatus {
	if in == nil {
		return nil
	}
	out := new(NicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeersInitParameters) DeepCopyInto(out *PeersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeersInitParameters.
func (in *PeersInitParameters) DeepCopy() *PeersInitParameters {
	if in == nil {
		return nil
	}
	out := new(PeersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeersObservation) DeepCopyInto(out *PeersObservation) {
	*out = *in
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterName != nil {
		in, out := &in.DatacenterName, &out.DatacenterName
		*out = new(string)
		**out = **in
	}
	if in.LanID != nil {
		in, out := &in.LanID, &out.LanID
		*out = new(string)
		**out = **in
	}
	if in.LanName != nil {
		in, out := &in.LanName, &out.LanName
		*out = new(string)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeersObservation.
func (in *PeersObservation) DeepCopy() *PeersObservation {
	if in == nil {
		return nil
	}
	out := new(PeersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PeersParameters) DeepCopyInto(out *PeersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PeersParameters.
func (in *PeersParameters) DeepCopy() *PeersParameters {
	if in == nil {
		return nil
	}
	out := new(PeersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Server) DeepCopyInto(out *Server) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Server.
func (in *Server) DeepCopy() *Server {
	if in == nil {
		return nil
	}
	out := new(Server)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Server) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerInitParameters) DeepCopyInto(out *ServerInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BootCdrom != nil {
		in, out := &in.BootCdrom, &out.BootCdrom
		*out = new(string)
		**out = **in
	}
	if in.BootImage != nil {
		in, out := &in.BootImage, &out.BootImage
		*out = new(string)
		**out = **in
	}
	if in.CPUFamily != nil {
		in, out := &in.CPUFamily, &out.CPUFamily
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallruleIds != nil {
		in, out := &in.FirewallruleIds, &out.FirewallruleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImagePasswordSecretRef != nil {
		in, out := &in.ImagePasswordSecretRef, &out.ImagePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nic != nil {
		in, out := &in.Nic, &out.Nic
		*out = make([]ServerNicInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAM != nil {
		in, out := &in.RAM, &out.RAM
		*out = new(float64)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateUUID != nil {
		in, out := &in.TemplateUUID, &out.TemplateUUID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerInitParameters.
func (in *ServerInitParameters) DeepCopy() *ServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerList) DeepCopyInto(out *ServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Server, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerList.
func (in *ServerList) DeepCopy() *ServerList {
	if in == nil {
		return nil
	}
	out := new(ServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerNicInitParameters) DeepCopyInto(out *ServerNicInitParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = make([]FirewallInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.LanRef != nil {
		in, out := &in.LanRef, &out.LanRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LanSelector != nil {
		in, out := &in.LanSelector, &out.LanSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerNicInitParameters.
func (in *ServerNicInitParameters) DeepCopy() *ServerNicInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServerNicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerNicObservation) DeepCopyInto(out *ServerNicObservation) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.DeviceNumber != nil {
		in, out := &in.DeviceNumber, &out.DeviceNumber
		*out = new(float64)
		**out = **in
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = make([]FirewallObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.Mac != nil {
		in, out := &in.Mac, &out.Mac
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PciSlot != nil {
		in, out := &in.PciSlot, &out.PciSlot
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerNicObservation.
func (in *ServerNicObservation) DeepCopy() *ServerNicObservation {
	if in == nil {
		return nil
	}
	out := new(ServerNicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerNicParameters) DeepCopyInto(out *ServerNicParameters) {
	*out = *in
	if in.DHCP != nil {
		in, out := &in.DHCP, &out.DHCP
		*out = new(bool)
		**out = **in
	}
	if in.Dhcpv6 != nil {
		in, out := &in.Dhcpv6, &out.Dhcpv6
		*out = new(bool)
		**out = **in
	}
	if in.Firewall != nil {
		in, out := &in.Firewall, &out.Firewall
		*out = make([]FirewallParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FirewallActive != nil {
		in, out := &in.FirewallActive, &out.FirewallActive
		*out = new(bool)
		**out = **in
	}
	if in.FirewallType != nil {
		in, out := &in.FirewallType, &out.FirewallType
		*out = new(string)
		**out = **in
	}
	if in.IPv6CidrBlock != nil {
		in, out := &in.IPv6CidrBlock, &out.IPv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.IPv6Ips != nil {
		in, out := &in.IPv6Ips, &out.IPv6Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ips != nil {
		in, out := &in.Ips, &out.Ips
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Lan != nil {
		in, out := &in.Lan, &out.Lan
		*out = new(float64)
		**out = **in
	}
	if in.LanRef != nil {
		in, out := &in.LanRef, &out.LanRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.LanSelector != nil {
		in, out := &in.LanSelector, &out.LanSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerNicParameters.
func (in *ServerNicParameters) DeepCopy() *ServerNicParameters {
	if in == nil {
		return nil
	}
	out := new(ServerNicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerObservation) DeepCopyInto(out *ServerObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BootCdrom != nil {
		in, out := &in.BootCdrom, &out.BootCdrom
		*out = new(string)
		**out = **in
	}
	if in.BootImage != nil {
		in, out := &in.BootImage, &out.BootImage
		*out = new(string)
		**out = **in
	}
	if in.BootVolume != nil {
		in, out := &in.BootVolume, &out.BootVolume
		*out = new(string)
		**out = **in
	}
	if in.CPUFamily != nil {
		in, out := &in.CPUFamily, &out.CPUFamily
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.FirewallruleID != nil {
		in, out := &in.FirewallruleID, &out.FirewallruleID
		*out = new(string)
		**out = **in
	}
	if in.FirewallruleIds != nil {
		in, out := &in.FirewallruleIds, &out.FirewallruleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.InlineVolumeIds != nil {
		in, out := &in.InlineVolumeIds, &out.InlineVolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nic != nil {
		in, out := &in.Nic, &out.Nic
		*out = make([]ServerNicObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrimaryIP != nil {
		in, out := &in.PrimaryIP, &out.PrimaryIP
		*out = new(string)
		**out = **in
	}
	if in.PrimaryNic != nil {
		in, out := &in.PrimaryNic, &out.PrimaryNic
		*out = new(string)
		**out = **in
	}
	if in.RAM != nil {
		in, out := &in.RAM, &out.RAM
		*out = new(float64)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateUUID != nil {
		in, out := &in.TemplateUUID, &out.TemplateUUID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerObservation.
func (in *ServerObservation) DeepCopy() *ServerObservation {
	if in == nil {
		return nil
	}
	out := new(ServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerParameters) DeepCopyInto(out *ServerParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BootCdrom != nil {
		in, out := &in.BootCdrom, &out.BootCdrom
		*out = new(string)
		**out = **in
	}
	if in.BootImage != nil {
		in, out := &in.BootImage, &out.BootImage
		*out = new(string)
		**out = **in
	}
	if in.CPUFamily != nil {
		in, out := &in.CPUFamily, &out.CPUFamily
		*out = new(string)
		**out = **in
	}
	if in.Cores != nil {
		in, out := &in.Cores, &out.Cores
		*out = new(float64)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.FirewallruleIds != nil {
		in, out := &in.FirewallruleIds, &out.FirewallruleIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImagePasswordSecretRef != nil {
		in, out := &in.ImagePasswordSecretRef, &out.ImagePasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Label != nil {
		in, out := &in.Label, &out.Label
		*out = make([]LabelParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Nic != nil {
		in, out := &in.Nic, &out.Nic
		*out = make([]ServerNicParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RAM != nil {
		in, out := &in.RAM, &out.RAM
		*out = new(float64)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TemplateUUID != nil {
		in, out := &in.TemplateUUID, &out.TemplateUUID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VMState != nil {
		in, out := &in.VMState, &out.VMState
		*out = new(string)
		**out = **in
	}
	if in.Volume != nil {
		in, out := &in.Volume, &out.Volume
		*out = make([]VolumeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerParameters.
func (in *ServerParameters) DeepCopy() *ServerParameters {
	if in == nil {
		return nil
	}
	out := new(ServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerSpec) DeepCopyInto(out *ServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerSpec.
func (in *ServerSpec) DeepCopy() *ServerSpec {
	if in == nil {
		return nil
	}
	out := new(ServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServerStatus) DeepCopyInto(out *ServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServerStatus.
func (in *ServerStatus) DeepCopy() *ServerStatus {
	if in == nil {
		return nil
	}
	out := new(ServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Administrator != nil {
		in, out := &in.Administrator, &out.Administrator
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ForceSecAuth != nil {
		in, out := &in.ForceSecAuth, &out.ForceSecAuth
		*out = new(bool)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Administrator != nil {
		in, out := &in.Administrator, &out.Administrator
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ForceSecAuth != nil {
		in, out := &in.ForceSecAuth, &out.ForceSecAuth
		*out = new(bool)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.S3CanonicalUserID != nil {
		in, out := &in.S3CanonicalUserID, &out.S3CanonicalUserID
		*out = new(string)
		**out = **in
	}
	if in.SecAuthActive != nil {
		in, out := &in.SecAuthActive, &out.SecAuthActive
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Administrator != nil {
		in, out := &in.Administrator, &out.Administrator
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ForceSecAuth != nil {
		in, out := &in.ForceSecAuth, &out.ForceSecAuth
		*out = new(bool)
		**out = **in
	}
	if in.GroupIds != nil {
		in, out := &in.GroupIds, &out.GroupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsersInitParameters) DeepCopyInto(out *UsersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsersInitParameters.
func (in *UsersInitParameters) DeepCopy() *UsersInitParameters {
	if in == nil {
		return nil
	}
	out := new(UsersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsersObservation) DeepCopyInto(out *UsersObservation) {
	*out = *in
	if in.Administrator != nil {
		in, out := &in.Administrator, &out.Administrator
		*out = new(bool)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.FirstName != nil {
		in, out := &in.FirstName, &out.FirstName
		*out = new(string)
		**out = **in
	}
	if in.ForceSecAuth != nil {
		in, out := &in.ForceSecAuth, &out.ForceSecAuth
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastName != nil {
		in, out := &in.LastName, &out.LastName
		*out = new(string)
		**out = **in
	}
	if in.Password != nil {
		in, out := &in.Password, &out.Password
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsersObservation.
func (in *UsersObservation) DeepCopy() *UsersObservation {
	if in == nil {
		return nil
	}
	out := new(UsersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsersParameters) DeepCopyInto(out *UsersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsersParameters.
func (in *UsersParameters) DeepCopy() *UsersParameters {
	if in == nil {
		return nil
	}
	out := new(UsersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Volume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters_2) DeepCopyInto(out *VolumeInitParameters_2) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters_2.
func (in *VolumeInitParameters_2) DeepCopy() *VolumeInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeList) DeepCopyInto(out *VolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeList.
func (in *VolumeList) DeepCopy() *VolumeList {
	if in == nil {
		return nil
	}
	out := new(VolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.BootServer != nil {
		in, out := &in.BootServer, &out.BootServer
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.CPUHotPlug != nil {
		in, out := &in.CPUHotPlug, &out.CPUHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.DeviceNumber != nil {
		in, out := &in.DeviceNumber, &out.DeviceNumber
		*out = new(float64)
		**out = **in
	}
	if in.DiscVirtioHotPlug != nil {
		in, out := &in.DiscVirtioHotPlug, &out.DiscVirtioHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.DiscVirtioHotUnplug != nil {
		in, out := &in.DiscVirtioHotUnplug, &out.DiscVirtioHotUnplug
		*out = new(bool)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicHotPlug != nil {
		in, out := &in.NicHotPlug, &out.NicHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.NicHotUnplug != nil {
		in, out := &in.NicHotUnplug, &out.NicHotUnplug
		*out = new(bool)
		**out = **in
	}
	if in.PciSlot != nil {
		in, out := &in.PciSlot, &out.PciSlot
		*out = new(float64)
		**out = **in
	}
	if in.RAMHotPlug != nil {
		in, out := &in.RAMHotPlug, &out.RAMHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation_2) DeepCopyInto(out *VolumeObservation_2) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.BootServer != nil {
		in, out := &in.BootServer, &out.BootServer
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.CPUHotPlug != nil {
		in, out := &in.CPUHotPlug, &out.CPUHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DeviceNumber != nil {
		in, out := &in.DeviceNumber, &out.DeviceNumber
		*out = new(float64)
		**out = **in
	}
	if in.DiscVirtioHotPlug != nil {
		in, out := &in.DiscVirtioHotPlug, &out.DiscVirtioHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.DiscVirtioHotUnplug != nil {
		in, out := &in.DiscVirtioHotUnplug, &out.DiscVirtioHotUnplug
		*out = new(bool)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NicHotPlug != nil {
		in, out := &in.NicHotPlug, &out.NicHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.NicHotUnplug != nil {
		in, out := &in.NicHotUnplug, &out.NicHotUnplug
		*out = new(bool)
		**out = **in
	}
	if in.PciSlot != nil {
		in, out := &in.PciSlot, &out.PciSlot
		*out = new(float64)
		**out = **in
	}
	if in.RAMHotPlug != nil {
		in, out := &in.RAMHotPlug, &out.RAMHotPlug
		*out = new(bool)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Sshkey != nil {
		in, out := &in.Sshkey, &out.Sshkey
		*out = new(string)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation_2.
func (in *VolumeObservation_2) DeepCopy() *VolumeObservation_2 {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters_2) DeepCopyInto(out *VolumeParameters_2) {
	*out = *in
	if in.AvailabilityZone != nil {
		in, out := &in.AvailabilityZone, &out.AvailabilityZone
		*out = new(string)
		**out = **in
	}
	if in.BackupUnitID != nil {
		in, out := &in.BackupUnitID, &out.BackupUnitID
		*out = new(string)
		**out = **in
	}
	if in.Bus != nil {
		in, out := &in.Bus, &out.Bus
		*out = new(string)
		**out = **in
	}
	if in.DatacenterID != nil {
		in, out := &in.DatacenterID, &out.DatacenterID
		*out = new(string)
		**out = **in
	}
	if in.DatacenterIDRef != nil {
		in, out := &in.DatacenterIDRef, &out.DatacenterIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DatacenterIDSelector != nil {
		in, out := &in.DatacenterIDSelector, &out.DatacenterIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskType != nil {
		in, out := &in.DiskType, &out.DiskType
		*out = new(string)
		**out = **in
	}
	if in.ImageName != nil {
		in, out := &in.ImageName, &out.ImageName
		*out = new(string)
		**out = **in
	}
	if in.ImagePassword != nil {
		in, out := &in.ImagePassword, &out.ImagePassword
		*out = new(string)
		**out = **in
	}
	if in.LicenceType != nil {
		in, out := &in.LicenceType, &out.LicenceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SSHKeyPath != nil {
		in, out := &in.SSHKeyPath, &out.SSHKeyPath
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SSHKeys != nil {
		in, out := &in.SSHKeys, &out.SSHKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerID != nil {
		in, out := &in.ServerID, &out.ServerID
		*out = new(string)
		**out = **in
	}
	if in.ServerIDRef != nil {
		in, out := &in.ServerIDRef, &out.ServerIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServerIDSelector != nil {
		in, out := &in.ServerIDSelector, &out.ServerIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.UserData != nil {
		in, out := &in.UserData, &out.UserData
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters_2.
func (in *VolumeParameters_2) DeepCopy() *VolumeParameters_2 {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeStatus) DeepCopyInto(out *VolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeStatus.
func (in *VolumeStatus) DeepCopy() *VolumeStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeStatus)
	in.DeepCopyInto(out)
	return out
}
