// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GroupInitParameters struct {

	// [Boolean] The group will be allowed to access the activity log.
	AccessActivityLog *bool `json:"accessActivityLog,omitempty" tf:"access_activity_log,omitempty"`

	// [Boolean]  The group will be allowed to access and manage certificates.
	// Privilege for a group to access and manage certificates.
	AccessAndManageCertificates *bool `json:"accessAndManageCertificates,omitempty" tf:"access_and_manage_certificates,omitempty"`

	// [Boolean]  The group will be allowed to access and manage monitoring.
	// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms, alarm-actions etc) using Monotoring-as-a-Service (MaaS).
	AccessAndManageMonitoring *bool `json:"accessAndManageMonitoring,omitempty" tf:"access_and_manage_monitoring,omitempty"`

	// [Boolean] The group will be allowed to create backup unit privilege.
	// Create backup unit privilege.
	CreateBackupUnit *bool `json:"createBackupUnit,omitempty" tf:"create_backup_unit,omitempty"`

	// [Boolean] The group will be allowed to create virtual data centers.
	CreateDatacenter *bool `json:"createDatacenter,omitempty" tf:"create_datacenter,omitempty"`

	// [Boolean]  The group will be allowed to create flow log.
	// Create Flow Logs privilege.
	CreateFlowLog *bool `json:"createFlowLog,omitempty" tf:"create_flow_log,omitempty"`

	// [Boolean] The group will be allowed to create internet access privilege.
	// Create internet access privilege.
	CreateInternetAccess *bool `json:"createInternetAccess,omitempty" tf:"create_internet_access,omitempty"`

	// [Boolean]  The group will be allowed to create kubernetes cluster privilege.
	// Create Kubernetes cluster privilege.
	CreateK8SCluster *bool `json:"createK8SCluster,omitempty" tf:"create_k8s_cluster,omitempty"`

	// [Boolean] The group will be allowed to create Cross Connects privilege.
	CreatePcc *bool `json:"createPcc,omitempty" tf:"create_pcc,omitempty"`

	// [Boolean] The group will be allowed to create snapshots.
	CreateSnapshot *bool `json:"createSnapshot,omitempty" tf:"create_snapshot,omitempty"`

	// [Boolean]  Privilege for a group to manage DBaaS related functionality.
	// Privilege for a group to manage DBaaS related functionality
	ManageDbaas *bool `json:"manageDbaas,omitempty" tf:"manage_dbaas,omitempty"`

	// [string] A name for the group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [Boolean] The group will be allowed to reserve IP addresses.
	ReserveIP *bool `json:"reserveIp,omitempty" tf:"reserve_ip,omitempty"`

	// [Boolean] The group will have S3 privilege.
	S3Privilege *bool `json:"s3Privilege,omitempty" tf:"s3_privilege,omitempty"`

	// [string] The ID of the specific user to add to the group. Please use user_ids argument since this is DEPRECATED
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// [list] A list of users to add to the group.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.User
	// +listType=set
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// References to User in compute to populate userIds.
	// +kubebuilder:validation:Optional
	UserIdsRefs []v1.Reference `json:"userIdsRefs,omitempty" tf:"-"`

	// Selector for a list of User in compute to populate userIds.
	// +kubebuilder:validation:Optional
	UserIdsSelector *v1.Selector `json:"userIdsSelector,omitempty" tf:"-"`
}

type GroupObservation struct {

	// [Boolean] The group will be allowed to access the activity log.
	AccessActivityLog *bool `json:"accessActivityLog,omitempty" tf:"access_activity_log,omitempty"`

	// [Boolean]  The group will be allowed to access and manage certificates.
	// Privilege for a group to access and manage certificates.
	AccessAndManageCertificates *bool `json:"accessAndManageCertificates,omitempty" tf:"access_and_manage_certificates,omitempty"`

	// [Boolean]  The group will be allowed to access and manage monitoring.
	// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms, alarm-actions etc) using Monotoring-as-a-Service (MaaS).
	AccessAndManageMonitoring *bool `json:"accessAndManageMonitoring,omitempty" tf:"access_and_manage_monitoring,omitempty"`

	// [Boolean] The group will be allowed to create backup unit privilege.
	// Create backup unit privilege.
	CreateBackupUnit *bool `json:"createBackupUnit,omitempty" tf:"create_backup_unit,omitempty"`

	// [Boolean] The group will be allowed to create virtual data centers.
	CreateDatacenter *bool `json:"createDatacenter,omitempty" tf:"create_datacenter,omitempty"`

	// [Boolean]  The group will be allowed to create flow log.
	// Create Flow Logs privilege.
	CreateFlowLog *bool `json:"createFlowLog,omitempty" tf:"create_flow_log,omitempty"`

	// [Boolean] The group will be allowed to create internet access privilege.
	// Create internet access privilege.
	CreateInternetAccess *bool `json:"createInternetAccess,omitempty" tf:"create_internet_access,omitempty"`

	// [Boolean]  The group will be allowed to create kubernetes cluster privilege.
	// Create Kubernetes cluster privilege.
	CreateK8SCluster *bool `json:"createK8SCluster,omitempty" tf:"create_k8s_cluster,omitempty"`

	// [Boolean] The group will be allowed to create Cross Connects privilege.
	CreatePcc *bool `json:"createPcc,omitempty" tf:"create_pcc,omitempty"`

	// [Boolean] The group will be allowed to create snapshots.
	CreateSnapshot *bool `json:"createSnapshot,omitempty" tf:"create_snapshot,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [Boolean]  Privilege for a group to manage DBaaS related functionality.
	// Privilege for a group to manage DBaaS related functionality
	ManageDbaas *bool `json:"manageDbaas,omitempty" tf:"manage_dbaas,omitempty"`

	// [string] A name for the group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [Boolean] The group will be allowed to reserve IP addresses.
	ReserveIP *bool `json:"reserveIp,omitempty" tf:"reserve_ip,omitempty"`

	// [Boolean] The group will have S3 privilege.
	S3Privilege *bool `json:"s3Privilege,omitempty" tf:"s3_privilege,omitempty"`

	// [string] The ID of the specific user to add to the group. Please use user_ids argument since this is DEPRECATED
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// [list] A list of users to add to the group.
	// +listType=set
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// (Computed) List of users - See the User section
	Users []UsersObservation `json:"users,omitempty" tf:"users,omitempty"`
}

type GroupParameters struct {

	// [Boolean] The group will be allowed to access the activity log.
	// +kubebuilder:validation:Optional
	AccessActivityLog *bool `json:"accessActivityLog,omitempty" tf:"access_activity_log,omitempty"`

	// [Boolean]  The group will be allowed to access and manage certificates.
	// Privilege for a group to access and manage certificates.
	// +kubebuilder:validation:Optional
	AccessAndManageCertificates *bool `json:"accessAndManageCertificates,omitempty" tf:"access_and_manage_certificates,omitempty"`

	// [Boolean]  The group will be allowed to access and manage monitoring.
	// Privilege for a group to access and manage monitoring related functionality (access metrics, CRUD on alarms, alarm-actions etc) using Monotoring-as-a-Service (MaaS).
	// +kubebuilder:validation:Optional
	AccessAndManageMonitoring *bool `json:"accessAndManageMonitoring,omitempty" tf:"access_and_manage_monitoring,omitempty"`

	// [Boolean] The group will be allowed to create backup unit privilege.
	// Create backup unit privilege.
	// +kubebuilder:validation:Optional
	CreateBackupUnit *bool `json:"createBackupUnit,omitempty" tf:"create_backup_unit,omitempty"`

	// [Boolean] The group will be allowed to create virtual data centers.
	// +kubebuilder:validation:Optional
	CreateDatacenter *bool `json:"createDatacenter,omitempty" tf:"create_datacenter,omitempty"`

	// [Boolean]  The group will be allowed to create flow log.
	// Create Flow Logs privilege.
	// +kubebuilder:validation:Optional
	CreateFlowLog *bool `json:"createFlowLog,omitempty" tf:"create_flow_log,omitempty"`

	// [Boolean] The group will be allowed to create internet access privilege.
	// Create internet access privilege.
	// +kubebuilder:validation:Optional
	CreateInternetAccess *bool `json:"createInternetAccess,omitempty" tf:"create_internet_access,omitempty"`

	// [Boolean]  The group will be allowed to create kubernetes cluster privilege.
	// Create Kubernetes cluster privilege.
	// +kubebuilder:validation:Optional
	CreateK8SCluster *bool `json:"createK8SCluster,omitempty" tf:"create_k8s_cluster,omitempty"`

	// [Boolean] The group will be allowed to create Cross Connects privilege.
	// +kubebuilder:validation:Optional
	CreatePcc *bool `json:"createPcc,omitempty" tf:"create_pcc,omitempty"`

	// [Boolean] The group will be allowed to create snapshots.
	// +kubebuilder:validation:Optional
	CreateSnapshot *bool `json:"createSnapshot,omitempty" tf:"create_snapshot,omitempty"`

	// [Boolean]  Privilege for a group to manage DBaaS related functionality.
	// Privilege for a group to manage DBaaS related functionality
	// +kubebuilder:validation:Optional
	ManageDbaas *bool `json:"manageDbaas,omitempty" tf:"manage_dbaas,omitempty"`

	// [string] A name for the group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [Boolean] The group will be allowed to reserve IP addresses.
	// +kubebuilder:validation:Optional
	ReserveIP *bool `json:"reserveIp,omitempty" tf:"reserve_ip,omitempty"`

	// [Boolean] The group will have S3 privilege.
	// +kubebuilder:validation:Optional
	S3Privilege *bool `json:"s3Privilege,omitempty" tf:"s3_privilege,omitempty"`

	// [string] The ID of the specific user to add to the group. Please use user_ids argument since this is DEPRECATED
	// +kubebuilder:validation:Optional
	UserID *string `json:"userId,omitempty" tf:"user_id,omitempty"`

	// [list] A list of users to add to the group.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/compute/v1alpha1.User
	// +kubebuilder:validation:Optional
	// +listType=set
	UserIds []*string `json:"userIds,omitempty" tf:"user_ids,omitempty"`

	// References to User in compute to populate userIds.
	// +kubebuilder:validation:Optional
	UserIdsRefs []v1.Reference `json:"userIdsRefs,omitempty" tf:"-"`

	// Selector for a list of User in compute to populate userIds.
	// +kubebuilder:validation:Optional
	UserIdsSelector *v1.Selector `json:"userIdsSelector,omitempty" tf:"-"`
}

type UsersInitParameters struct {
}

type UsersObservation struct {
	Administrator *bool `json:"administrator,omitempty" tf:"administrator,omitempty"`

	Email *string `json:"email,omitempty" tf:"email,omitempty"`

	// [string] A name for the group.
	FirstName *string `json:"firstName,omitempty" tf:"first_name,omitempty"`

	ForceSecAuth *bool `json:"forceSecAuth,omitempty" tf:"force_sec_auth,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [string] A name for the group.
	LastName *string `json:"lastName,omitempty" tf:"last_name,omitempty"`

	Password *string `json:"password,omitempty" tf:"password,omitempty"`
}

type UsersParameters struct {
}

// GroupSpec defines the desired state of Group
type GroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GroupInitParameters `json:"initProvider,omitempty"`
}

// GroupStatus defines the observed state of Group.
type GroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Group is the Schema for the Groups API. Creates and manages group objects.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ionos}
type Group struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   GroupSpec   `json:"spec"`
	Status GroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupList contains a list of Groups
type GroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Group `json:"items"`
}

// Repository type metadata.
var (
	Group_Kind             = "Group"
	Group_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Group_Kind}.String()
	Group_KindAPIVersion   = Group_Kind + "." + CRDGroupVersion.String()
	Group_GroupVersionKind = CRDGroupVersion.WithKind(Group_Kind)
)

func init() {
	SchemeBuilder.Register(&Group{}, &GroupList{})
}
