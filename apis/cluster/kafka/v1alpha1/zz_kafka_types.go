// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ConnectionsInitParameters struct {

	// [list] IP addresses and subnet of cluster brokers. Note the following
	// unavailable IP range: 10.224.0.0/11
	// The broker addresses of the Kafka Cluster. Can be empty, but must be present.
	BrokerAddresses []*string `json:"brokerAddresses,omitempty" tf:"broker_addresses,omitempty"`

	// [string] The datacenter to connect your instance to.
	// The datacenter to connect your Kafka Cluster to.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Datacenter
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.Reference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.Selector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// [string] The numeric LAN ID to connect your instance to.
	// The numeric LAN ID to connect your Kafka Cluster to.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Lan
	LanID *string `json:"lanId,omitempty" tf:"lan_id,omitempty"`

	// Reference to a Lan in compute to populate lanId.
	// +kubebuilder:validation:Optional
	LanIDRef *v1.Reference `json:"lanIdRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate lanId.
	// +kubebuilder:validation:Optional
	LanIDSelector *v1.Selector `json:"lanIdSelector,omitempty" tf:"-"`
}

type ConnectionsObservation struct {

	// [list] IP addresses and subnet of cluster brokers. Note the following
	// unavailable IP range: 10.224.0.0/11
	// The broker addresses of the Kafka Cluster. Can be empty, but must be present.
	BrokerAddresses []*string `json:"brokerAddresses,omitempty" tf:"broker_addresses,omitempty"`

	// [string] The datacenter to connect your instance to.
	// The datacenter to connect your Kafka Cluster to.
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// [string] The numeric LAN ID to connect your instance to.
	// The numeric LAN ID to connect your Kafka Cluster to.
	LanID *string `json:"lanId,omitempty" tf:"lan_id,omitempty"`
}

type ConnectionsParameters struct {

	// [list] IP addresses and subnet of cluster brokers. Note the following
	// unavailable IP range: 10.224.0.0/11
	// The broker addresses of the Kafka Cluster. Can be empty, but must be present.
	// +kubebuilder:validation:Optional
	BrokerAddresses []*string `json:"brokerAddresses" tf:"broker_addresses,omitempty"`

	// [string] The datacenter to connect your instance to.
	// The datacenter to connect your Kafka Cluster to.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Datacenter
	// +kubebuilder:validation:Optional
	DatacenterID *string `json:"datacenterId,omitempty" tf:"datacenter_id,omitempty"`

	// Reference to a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDRef *v1.Reference `json:"datacenterIdRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate datacenterId.
	// +kubebuilder:validation:Optional
	DatacenterIDSelector *v1.Selector `json:"datacenterIdSelector,omitempty" tf:"-"`

	// [string] The numeric LAN ID to connect your instance to.
	// The numeric LAN ID to connect your Kafka Cluster to.
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Lan
	// +kubebuilder:validation:Optional
	LanID *string `json:"lanId,omitempty" tf:"lan_id,omitempty"`

	// Reference to a Lan in compute to populate lanId.
	// +kubebuilder:validation:Optional
	LanIDRef *v1.Reference `json:"lanIdRef,omitempty" tf:"-"`

	// Selector for a Lan in compute to populate lanId.
	// +kubebuilder:validation:Optional
	LanIDSelector *v1.Selector `json:"lanIdSelector,omitempty" tf:"-"`
}

type KafkaInitParameters struct {

	// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
	// The network connection for your Kafka Cluster. Only one connection is allowed.
	Connections *ConnectionsInitParameters `json:"connections,omitempty" tf:"connections,omitempty"`

	// [string] The location of the Kafka Cluster. Possible values: de/fra, de/txl. If this is not set and if no value is provided for the IONOS_API_URL env var, the default location will be: de/fra.
	// The location of your Kafka Cluster. Supported locations: de/fra, de/txl
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Datacenter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("location",false)
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Reference to a Datacenter in compute to populate location.
	// +kubebuilder:validation:Optional
	LocationRef *v1.Reference `json:"locationRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate location.
	// +kubebuilder:validation:Optional
	LocationSelector *v1.Selector `json:"locationSelector,omitempty" tf:"-"`

	// [string] Name of the Kafka Cluster.
	// The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [string] Size of the Kafka Cluster. Possible values: XS, S
	// The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// [string] Version of the Kafka Cluster. Possible values: 3.8.0, 3.9.0
	// The desired Kafka Version. Supported versions: 3.8.0
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type KafkaObservation struct {

	// [list] IP addresses and subnet of cluster brokers. Note the following
	// unavailable IP range: 10.224.0.0/11
	// IP address and port of cluster brokers.
	BrokerAddresses []*string `json:"brokerAddresses,omitempty" tf:"broker_addresses,omitempty"`

	// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
	// The network connection for your Kafka Cluster. Only one connection is allowed.
	Connections *ConnectionsObservation `json:"connections,omitempty" tf:"connections,omitempty"`

	// (Computed)[string] The UUID of the Kafka Cluster.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// [string] The location of the Kafka Cluster. Possible values: de/fra, de/txl. If this is not set and if no value is provided for the IONOS_API_URL env var, the default location will be: de/fra.
	// The location of your Kafka Cluster. Supported locations: de/fra, de/txl
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// [string] Name of the Kafka Cluster.
	// The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [string] Size of the Kafka Cluster. Possible values: XS, S
	// The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// [string] Version of the Kafka Cluster. Possible values: 3.8.0, 3.9.0
	// The desired Kafka Version. Supported versions: 3.8.0
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

type KafkaParameters struct {

	// Connection information of the Kafka Cluster. Minimum items: 1, maximum items: 1.
	// The network connection for your Kafka Cluster. Only one connection is allowed.
	// +kubebuilder:validation:Optional
	Connections *ConnectionsParameters `json:"connections,omitempty" tf:"connections,omitempty"`

	// [string] The location of the Kafka Cluster. Possible values: de/fra, de/txl. If this is not set and if no value is provided for the IONOS_API_URL env var, the default location will be: de/fra.
	// The location of your Kafka Cluster. Supported locations: de/fra, de/txl
	// +crossplane:generate:reference:type=github.com/ionos-cloud/provider-upjet-ionoscloud/apis/cluster/compute/v1alpha1.Datacenter
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("location",false)
	// +kubebuilder:validation:Optional
	Location *string `json:"location,omitempty" tf:"location,omitempty"`

	// Reference to a Datacenter in compute to populate location.
	// +kubebuilder:validation:Optional
	LocationRef *v1.Reference `json:"locationRef,omitempty" tf:"-"`

	// Selector for a Datacenter in compute to populate location.
	// +kubebuilder:validation:Optional
	LocationSelector *v1.Selector `json:"locationSelector,omitempty" tf:"-"`

	// [string] Name of the Kafka Cluster.
	// The name of your Kafka Cluster. Must be 63 characters or less and must begin and end with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// [string] Size of the Kafka Cluster. Possible values: XS, S
	// The size of your Kafka Cluster. The size of the Kafka Cluster is given in T-shirt sizes. Valid values are: XS, S
	// +kubebuilder:validation:Optional
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// [string] Version of the Kafka Cluster. Possible values: 3.8.0, 3.9.0
	// The desired Kafka Version. Supported versions: 3.8.0
	// +kubebuilder:validation:Optional
	Version *string `json:"version,omitempty" tf:"version,omitempty"`
}

// KafkaSpec defines the desired state of Kafka
type KafkaSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     KafkaParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider KafkaInitParameters `json:"initProvider,omitempty"`
}

// KafkaStatus defines the observed state of Kafka.
type KafkaStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        KafkaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Kafka is the Schema for the Kafkas API. Creates and manages IonosCloud Kafka Cluster objects.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,ionos}
type Kafka struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.connections) || (has(self.initProvider) && has(self.initProvider.connections))",message="spec.forProvider.connections is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) && has(self.initProvider.size))",message="spec.forProvider.size is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.version) || (has(self.initProvider) && has(self.initProvider.version))",message="spec.forProvider.version is a required parameter"
	Spec   KafkaSpec   `json:"spec"`
	Status KafkaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// KafkaList contains a list of Kafkas
type KafkaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Kafka `json:"items"`
}

// Repository type metadata.
var (
	Kafka_Kind             = "Kafka"
	Kafka_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Kafka_Kind}.String()
	Kafka_KindAPIVersion   = Kafka_Kind + "." + CRDGroupVersion.String()
	Kafka_GroupVersionKind = CRDGroupVersion.WithKind(Kafka_Kind)
)

func init() {
	SchemeBuilder.Register(&Kafka{}, &KafkaList{})
}
