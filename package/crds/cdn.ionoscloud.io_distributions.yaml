---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: distributions.cdn.ionoscloud.io
spec:
  group: cdn.ionoscloud.io
  names:
    categories:
    - crossplane
    - managed
    - ionos
    kind: Distribution
    listKind: DistributionList
    plural: distributions
    singular: distribution
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Distribution is the Schema for the Distributions API. Creates
          and manages IonosCloud CDN Distributions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DistributionSpec defines the desired state of Distribution
            properties:
              forProvider:
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  certificateIdRef:
                    description: Reference to a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  certificateIdSelector:
                    description: Selector for a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  certificateIdRef:
                    description: Reference to a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  certificateIdSelector:
                    description: Selector for a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  kind: ClusterProviderConfig
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  kind:
                    description: Kind of the referenced object.
                    type: string
                  name:
                    description: Name of the referenced object.
                    type: string
                required:
                - kind
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                required:
                - name
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.domain is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.domain)
                || (has(self.initProvider) && has(self.initProvider.domain))'
            - message: spec.forProvider.routingRules is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.routingRules)
                || (has(self.initProvider) && has(self.initProvider.routingRules))'
          status:
            description: DistributionStatus defines the observed state of Distribution.
            properties:
              atProvider:
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  id:
                    type: string
                  publicEndpointV4:
                    description: |-
                      IP of the distribution, it has to be included on the domain DNS Zone as A record.
                      IP of the distribution, it has to be included on the domain DNS Zone as A record.
                    type: string
                  publicEndpointV6:
                    description: |-
                      IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
                      IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
                    type: string
                  resourceUrn:
                    description: |-
                      Unique resource indentifier.
                      Unique name of the resource.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Distribution is the Schema for the Distributions API. Creates
          and manages IonosCloud CDN Distributions.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DistributionSpec defines the desired state of Distribution
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  certificateIdRef:
                    description: Reference to a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  certificateIdSelector:
                    description: Selector for a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  certificateIdRef:
                    description: Reference to a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  certificateIdSelector:
                    description: Selector for a Certificate in certificatemanager
                      to populate certificateId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.domain is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.domain)
                || (has(self.initProvider) && has(self.initProvider.domain))'
            - message: spec.forProvider.routingRules is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.routingRules)
                || (has(self.initProvider) && has(self.initProvider.routingRules))'
          status:
            description: DistributionStatus defines the observed state of Distribution.
            properties:
              atProvider:
                properties:
                  certificateId:
                    description: |-
                      [string] The ID of the certificate to use for the distribution. You can create certificates with the certificate resource.
                      The ID of the certificate to use for the distribution.
                    type: string
                  domain:
                    description: |-
                      [string] The domain of the distribution.
                      The domain of the distribution.
                    type: string
                  id:
                    type: string
                  publicEndpointV4:
                    description: |-
                      IP of the distribution, it has to be included on the domain DNS Zone as A record.
                      IP of the distribution, it has to be included on the domain DNS Zone as A record.
                    type: string
                  publicEndpointV6:
                    description: |-
                      IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
                      IP of the distribution, it has to be included on the domain DNS Zone as AAAA record.
                    type: string
                  resourceUrn:
                    description: |-
                      Unique resource indentifier.
                      Unique name of the resource.
                    type: string
                  routingRules:
                    description: |-
                      [list] The routing rules for the distribution.
                      The routing rules for the distribution.
                    items:
                      properties:
                        prefix:
                          description: |-
                            [string] The prefix of the routing rule.
                            The prefix of the routing rule.
                          type: string
                        scheme:
                          description: |-
                            [string] The scheme of the routing rule.
                            The scheme of the routing rule.
                          type: string
                        upstream:
                          description: '[map] - A map of properties for the rule'
                          properties:
                            caching:
                              description: |-
                                [bool] Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                                Enable or disable caching. If enabled, the CDN will cache the responses from the upstream host. Subsequent requests for the same resource will be served from the cache.
                              type: boolean
                            geoRestrictions:
                              description: '[map] - A map of geo_restrictions'
                              properties:
                                allowList:
                                  description: '[string] List of allowed countries'
                                  items:
                                    type: string
                                  type: array
                                blockList:
                                  description: '[string] List of blocked countries'
                                  items:
                                    type: string
                                  type: array
                              type: object
                            host:
                              description: |-
                                [string] The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                                The upstream host that handles the requests if not already cached. This host will be protected by the WAF if the option is enabled.
                              type: string
                            rateLimitClass:
                              description: |-
                                [string] Rate limit class that will be applied to limit the number of incoming requests per IP.
                                Rate limit class that will be applied to limit the number of incoming requests per IP.
                              type: string
                            sniMode:
                              description: |-
                                [string] The SNI (Server Name Indication) mode of the upstream. It supports two modes: 1) distribution: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured domain of the CDN distribution; 2) origin: for outgoing connections to the upstream host, the CDN requires the upstream host to present a valid certificate that matches the configured upstream/origin hostname.
                                The SNI (Server Name Indication) mode of the upstream host. It supports two modes: 'distribution' and 'origin', for more information about these modes please check the resource docs.
                              type: string
                            waf:
                              description: |-
                                [bool] Enable or disable WAF to protect the upstream host.
                                Enable or disable WAF to protect the upstream host.
                              type: boolean
                          type: object
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
