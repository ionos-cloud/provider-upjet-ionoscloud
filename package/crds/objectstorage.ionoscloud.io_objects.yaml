---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: objects.objectstorage.ionoscloud.io
spec:
  group: objectstorage.ionoscloud.io
  names:
    categories:
    - crossplane
    - managed
    - ionos
    kind: Object
    listKind: ObjectList
    plural: objects
    singular: object
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Object is the Schema for the Objects API. Creates and manages
          IONOS Object Storage Objects.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ObjectSpec defines the desired state of Object
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  bucket:
                    description: |-
                      [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
                      The name of the bucket
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in objectstorage to populate
                      bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in objectstorage to populate
                      bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      [string] Specifies caching behavior along the request/reply chain.
                      Can be used to specify caching behavior along the request/reply chain
                    type: string
                  content:
                    description: |-
                      [string] Inline content of the object.
                      The utf-8 content of the object
                    type: string
                  contentDisposition:
                    description: |-
                      [string] Specifies presentational information for the object.
                      Specifies presentational information for the object
                    type: string
                  contentEncoding:
                    description: |-
                      [string] Specifies what content encodings have been applied to the object.
                      Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field
                    type: string
                  contentLanguage:
                    description: |-
                      [string] The natural language or languages of the intended audience for the object.
                      The natural language or languages of the intended audience for the object
                    type: string
                  contentType:
                    description: |-
                      [string] A standard MIME type describing the format of the contents.
                      A standard MIME type describing the format of the contents
                    type: string
                  expires:
                    description: |-
                      [string] The date and time at which the object is no longer cacheable.
                      The date and time at which the object is no longer cacheable
                    type: string
                  forceDestroy:
                    description: |-
                      [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is false.
                      Specifies whether to delete the object even if it has a governance-type Object Lock in place. You must explicitly pass a value of true for this parameter to delete the object.
                    type: boolean
                  key:
                    description: |-
                      [string] The key of the object. Must be at least 1 character long.
                      The key of the object
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
                      A map of metadata to store with the object in IONOS Object Storage Object Storage
                    type: object
                    x-kubernetes-map-type: granular
                  mfa:
                    description: |-
                      [string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.
                      The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA Delete enabled.
                    type: string
                  objectLockLegalHold:
                    description: |-
                      [string] Indicates whether a legal hold is in effect for the object. Valid values are ON and OFF.
                      Specifies whether a legal hold will be applied to this object.
                    type: string
                  objectLockMode:
                    description: |-
                      [string] The object lock mode that you want to apply to the object. Valid values are GOVERNANCE and COMPLIANCE.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  objectLockRetainUntilDate:
                    description: |-
                      [string] The date and time when the object lock retention expires.Must be in RFC3999 format
                      The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.
                    type: string
                  requestPayer:
                    description: |-
                      [string] Confirms that the requester knows that they will be charged for the request.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  serverSideEncryption:
                    description: |-
                      [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
                      The server-side encryption algorithm used when storing this object in IONOS Object Storage Object Storage (AES256).
                    type: string
                  serverSideEncryptionContextSecretRef:
                    description: |-
                      [string] Specifies the IONOS Object Storage Encryption Context for object encryption.
                      Specifies the IONOS Object Storage Object Storage Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  serverSideEncryptionCustomerAlgorithm:
                    description: |-
                      [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
                      Specifies the algorithm to use to when encrypting the object (e.g., AES256).
                    type: string
                  serverSideEncryptionCustomerKey:
                    description: |-
                      [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
                      Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
                    type: string
                  serverSideEncryptionCustomerKeyMd5:
                    description: |-
                      [string] Specifies the 128-bit MD5 digest of the encryption key.
                      Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS Object Storage Object Storage uses this header for a message integrity check  to ensure that the encryption key was transmitted without error
                    type: string
                  source:
                    description: |-
                      [string] The path to the file to upload.
                      The path to the file to upload
                    type: string
                  storageClass:
                    description: |-
                      [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
                      The storage class of the object. Valid value is 'STANDARD'.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] The tag-set for the object.
                      The tag-set for the object
                    type: object
                    x-kubernetes-map-type: granular
                  websiteRedirect:
                    description: |-
                      [string] Redirects requests for this object to another object in the same bucket or to an external URL.
                      If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. IONOS Object Storage Object Storage stores the value of this header in the object metadata
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  bucket:
                    description: |-
                      [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
                      The name of the bucket
                    type: string
                  bucketRef:
                    description: Reference to a Bucket in objectstorage to populate
                      bucket.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  bucketSelector:
                    description: Selector for a Bucket in objectstorage to populate
                      bucket.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  cacheControl:
                    description: |-
                      [string] Specifies caching behavior along the request/reply chain.
                      Can be used to specify caching behavior along the request/reply chain
                    type: string
                  content:
                    description: |-
                      [string] Inline content of the object.
                      The utf-8 content of the object
                    type: string
                  contentDisposition:
                    description: |-
                      [string] Specifies presentational information for the object.
                      Specifies presentational information for the object
                    type: string
                  contentEncoding:
                    description: |-
                      [string] Specifies what content encodings have been applied to the object.
                      Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field
                    type: string
                  contentLanguage:
                    description: |-
                      [string] The natural language or languages of the intended audience for the object.
                      The natural language or languages of the intended audience for the object
                    type: string
                  contentType:
                    description: |-
                      [string] A standard MIME type describing the format of the contents.
                      A standard MIME type describing the format of the contents
                    type: string
                  expires:
                    description: |-
                      [string] The date and time at which the object is no longer cacheable.
                      The date and time at which the object is no longer cacheable
                    type: string
                  forceDestroy:
                    description: |-
                      [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is false.
                      Specifies whether to delete the object even if it has a governance-type Object Lock in place. You must explicitly pass a value of true for this parameter to delete the object.
                    type: boolean
                  key:
                    description: |-
                      [string] The key of the object. Must be at least 1 character long.
                      The key of the object
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
                      A map of metadata to store with the object in IONOS Object Storage Object Storage
                    type: object
                    x-kubernetes-map-type: granular
                  mfa:
                    description: |-
                      [string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.
                      The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA Delete enabled.
                    type: string
                  objectLockLegalHold:
                    description: |-
                      [string] Indicates whether a legal hold is in effect for the object. Valid values are ON and OFF.
                      Specifies whether a legal hold will be applied to this object.
                    type: string
                  objectLockMode:
                    description: |-
                      [string] The object lock mode that you want to apply to the object. Valid values are GOVERNANCE and COMPLIANCE.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  objectLockRetainUntilDate:
                    description: |-
                      [string] The date and time when the object lock retention expires.Must be in RFC3999 format
                      The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.
                    type: string
                  requestPayer:
                    description: |-
                      [string] Confirms that the requester knows that they will be charged for the request.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  serverSideEncryption:
                    description: |-
                      [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
                      The server-side encryption algorithm used when storing this object in IONOS Object Storage Object Storage (AES256).
                    type: string
                  serverSideEncryptionContextSecretRef:
                    description: |-
                      [string] Specifies the IONOS Object Storage Encryption Context for object encryption.
                      Specifies the IONOS Object Storage Object Storage Encryption Context to use for object encryption. The value of this header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  serverSideEncryptionCustomerAlgorithm:
                    description: |-
                      [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
                      Specifies the algorithm to use to when encrypting the object (e.g., AES256).
                    type: string
                  serverSideEncryptionCustomerKey:
                    description: |-
                      [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
                      Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
                    type: string
                  serverSideEncryptionCustomerKeyMd5:
                    description: |-
                      [string] Specifies the 128-bit MD5 digest of the encryption key.
                      Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS Object Storage Object Storage uses this header for a message integrity check  to ensure that the encryption key was transmitted without error
                    type: string
                  source:
                    description: |-
                      [string] The path to the file to upload.
                      The path to the file to upload
                    type: string
                  storageClass:
                    description: |-
                      [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
                      The storage class of the object. Valid value is 'STANDARD'.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] The tag-set for the object.
                      The tag-set for the object
                    type: object
                    x-kubernetes-map-type: granular
                  websiteRedirect:
                    description: |-
                      [string] Redirects requests for this object to another object in the same bucket or to an external URL.
                      If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. IONOS Object Storage Object Storage stores the value of this header in the object metadata
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.key is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.key)
                || (has(self.initProvider) && has(self.initProvider.key))'
          status:
            description: ObjectStatus defines the observed state of Object.
            properties:
              atProvider:
                properties:
                  bucket:
                    description: |-
                      [string] The name of the bucket where the object will be stored. Must be between 3 and 63 characters.
                      The name of the bucket
                    type: string
                  cacheControl:
                    description: |-
                      [string] Specifies caching behavior along the request/reply chain.
                      Can be used to specify caching behavior along the request/reply chain
                    type: string
                  content:
                    description: |-
                      [string] Inline content of the object.
                      The utf-8 content of the object
                    type: string
                  contentDisposition:
                    description: |-
                      [string] Specifies presentational information for the object.
                      Specifies presentational information for the object
                    type: string
                  contentEncoding:
                    description: |-
                      [string] Specifies what content encodings have been applied to the object.
                      Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field
                    type: string
                  contentLanguage:
                    description: |-
                      [string] The natural language or languages of the intended audience for the object.
                      The natural language or languages of the intended audience for the object
                    type: string
                  contentType:
                    description: |-
                      [string] A standard MIME type describing the format of the contents.
                      A standard MIME type describing the format of the contents
                    type: string
                  etag:
                    description: |-
                      (Computed)[string] An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
                      An entity tag (ETag) is an opaque identifier assigned by a web server to a specific version of a resource found at a URL.
                    type: string
                  expires:
                    description: |-
                      [string] The date and time at which the object is no longer cacheable.
                      The date and time at which the object is no longer cacheable
                    type: string
                  forceDestroy:
                    description: |-
                      [bool] If true, the object will be destroyed if versioning is enabled then all versions will be destroyed. Default is false.
                      Specifies whether to delete the object even if it has a governance-type Object Lock in place. You must explicitly pass a value of true for this parameter to delete the object.
                    type: boolean
                  id:
                    type: string
                  key:
                    description: |-
                      [string] The key of the object. Must be at least 1 character long.
                      The key of the object
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] A map of metadata to store with the object in IONOS Object Storage. Metadata keys must be lowercase alphanumeric characters.
                      A map of metadata to store with the object in IONOS Object Storage Object Storage
                    type: object
                    x-kubernetes-map-type: granular
                  mfa:
                    description: |-
                      [string]The concatenation of the authentication device's serial number, a space, and the value displayed on your authentication device.
                      The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device. Required to permanently delete a versioned object if versioning is configured with MFA Delete enabled.
                    type: string
                  objectLockLegalHold:
                    description: |-
                      [string] Indicates whether a legal hold is in effect for the object. Valid values are ON and OFF.
                      Specifies whether a legal hold will be applied to this object.
                    type: string
                  objectLockMode:
                    description: |-
                      [string] The object lock mode that you want to apply to the object. Valid values are GOVERNANCE and COMPLIANCE.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  objectLockRetainUntilDate:
                    description: |-
                      [string] The date and time when the object lock retention expires.Must be in RFC3999 format
                      The date and time when you want this object's Object Lock to expire. Must be formatted as a timestamp parameter.
                    type: string
                  requestPayer:
                    description: |-
                      [string] Confirms that the requester knows that they will be charged for the request.
                      Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests.
                    type: string
                  serverSideEncryption:
                    description: |-
                      [string] The server-side encryption algorithm used when storing this object in IONOS Object Storage. Valid value is AES256.
                      The server-side encryption algorithm used when storing this object in IONOS Object Storage Object Storage (AES256).
                    type: string
                  serverSideEncryptionCustomerAlgorithm:
                    description: |-
                      [string] Specifies the algorithm to use for encrypting the object. Valid value is AES256.
                      Specifies the algorithm to use to when encrypting the object (e.g., AES256).
                    type: string
                  serverSideEncryptionCustomerKey:
                    description: |-
                      [string] Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data.
                      Specifies the 256-bit, base64-encoded encryption key to use to encrypt and decrypt your data
                    type: string
                  serverSideEncryptionCustomerKeyMd5:
                    description: |-
                      [string] Specifies the 128-bit MD5 digest of the encryption key.
                      Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. IONOS Object Storage Object Storage uses this header for a message integrity check  to ensure that the encryption key was transmitted without error
                    type: string
                  source:
                    description: |-
                      [string] The path to the file to upload.
                      The path to the file to upload
                    type: string
                  storageClass:
                    description: |-
                      [string] The storage class of the object. Valid value is STANDARD. Default is STANDARD.
                      The storage class of the object. Valid value is 'STANDARD'.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] The tag-set for the object.
                      The tag-set for the object
                    type: object
                    x-kubernetes-map-type: granular
                  versionId:
                    description: |-
                      (Computed)[string] The version of the object.
                      The version of the object
                    type: string
                  websiteRedirect:
                    description: |-
                      [string] Redirects requests for this object to another object in the same bucket or to an external URL.
                      If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. IONOS Object Storage Object Storage stores the value of this header in the object metadata
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
