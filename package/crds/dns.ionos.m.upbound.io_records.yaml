---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: records.dns.ionos.m.upbound.io
spec:
  group: dns.ionos.m.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - ionso
    kind: Record
    listKind: RecordList
    plural: records
    singular: record
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Record is the Schema for the Records API. Creates and manages
          DNS Record objects.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RecordSpec defines the desired state of Record
            properties:
              forProvider:
                properties:
                  content:
                    description: '[string] The content of the DNS Record.'
                    type: string
                  enabled:
                    description: '[bool] Indicates if the DNS Record is active or
                      not. Default is true.'
                    type: boolean
                  priority:
                    description: '[int] The priority for the DNS Record.'
                    type: number
                  ttl:
                    description: '[int] Time to live for the DNS Record. Default is
                      3600.'
                    type: number
                  type:
                    description: '[string] The type of the DNS Record, can have one
                      of these values: A, AAAA, CNAME, ALIAS, MX, NS, SRV, TXT, CAA,
                      SSHFP, TLSA, SMIMEA, DS, HTTPS, SVCB, OPENPGPKEY, CERT, URI,
                      RP, LOC. More details about types can be found here.'
                    type: string
                  zoneId:
                    description: '[string] The DNS Zone ID in which the DNS Record
                      will be created.'
                    type: string
                  zoneIdRef:
                    description: Reference to a Zone in dns to populate zoneId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  zoneIdSelector:
                    description: Selector for a Zone in dns to populate zoneId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  content:
                    description: '[string] The content of the DNS Record.'
                    type: string
                  enabled:
                    description: '[bool] Indicates if the DNS Record is active or
                      not. Default is true.'
                    type: boolean
                  priority:
                    description: '[int] The priority for the DNS Record.'
                    type: number
                  ttl:
                    description: '[int] Time to live for the DNS Record. Default is
                      3600.'
                    type: number
                  type:
                    description: '[string] The type of the DNS Record, can have one
                      of these values: A, AAAA, CNAME, ALIAS, MX, NS, SRV, TXT, CAA,
                      SSHFP, TLSA, SMIMEA, DS, HTTPS, SVCB, OPENPGPKEY, CERT, URI,
                      RP, LOC. More details about types can be found here.'
                    type: string
                  zoneId:
                    description: '[string] The DNS Zone ID in which the DNS Record
                      will be created.'
                    type: string
                  zoneIdRef:
                    description: Reference to a Zone in dns to populate zoneId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      namespace:
                        description: Namespace of the referenced object
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  zoneIdSelector:
                    description: Selector for a Zone in dns to populate zoneId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      namespace:
                        description: Namespace for the selector
                        type: string
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.content is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.content)
                || (has(self.initProvider) && has(self.initProvider.content))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: RecordStatus defines the observed state of Record.
            properties:
              atProvider:
                properties:
                  content:
                    description: '[string] The content of the DNS Record.'
                    type: string
                  enabled:
                    description: '[bool] Indicates if the DNS Record is active or
                      not. Default is true.'
                    type: boolean
                  fqdn:
                    description: Fully qualified domain name
                    type: string
                  id:
                    type: string
                  priority:
                    description: '[int] The priority for the DNS Record.'
                    type: number
                  ttl:
                    description: '[int] Time to live for the DNS Record. Default is
                      3600.'
                    type: number
                  type:
                    description: '[string] The type of the DNS Record, can have one
                      of these values: A, AAAA, CNAME, ALIAS, MX, NS, SRV, TXT, CAA,
                      SSHFP, TLSA, SMIMEA, DS, HTTPS, SVCB, OPENPGPKEY, CERT, URI,
                      RP, LOC. More details about types can be found here.'
                    type: string
                  zoneId:
                    description: '[string] The DNS Zone ID in which the DNS Record
                      will be created.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
