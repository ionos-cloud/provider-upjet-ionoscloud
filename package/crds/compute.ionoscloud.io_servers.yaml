---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: servers.compute.ionoscloud.io
spec:
  group: compute.ionoscloud.io
  names:
    categories:
    - crossplane
    - managed
    - ionos
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Server is the Schema for the Servers API. Creates and manages
          IonosCloud Volume objects.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerSpec defines the desired state of Server
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  availabilityZone:
                    description: '[string] The storage availability zone assigned
                      to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                      is immutable'
                    type: string
                  bootCdrom:
                    description: The associated boot drive, if any. Must be the UUID
                      of a bootable CDROM image that you can retrieve using the image
                      data source
                    type: string
                  bootImage:
                    description: (Computed) The image or snapshot UUID.
                    type: string
                  cores:
                    type: number
                  cpuFamily:
                    type: string
                  datacenterId:
                    description: '[string] The ID of a Virtual Data Center.'
                    type: string
                  datacenterIdRef:
                    description: Reference to a Datacenter in compute to populate
                      datacenterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  datacenterIdSelector:
                    description: Selector for a Datacenter in compute to populate
                      datacenterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  firewallruleIds:
                    items:
                      type: string
                    type: array
                  imageName:
                    description: '[string] The name, ID or alias of the image. May
                      also be a snapshot ID. It is required if licence_type is not
                      provided. Attribute is immutable.'
                    type: string
                  imagePasswordSecretRef:
                    description: '[string] Required if sshkey_path is not provided.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  label:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  name:
                    description: '[string] The name of the volume.'
                    type: string
                  nic:
                    items:
                      properties:
                        dhcp:
                          type: boolean
                        dhcpv6:
                          description: Indicates whether this NIC receives an IPv6
                            address through DHCP.
                          type: boolean
                        firewall:
                          description: Firewall rules created in the server resource.
                            The rules can also be created as separate resources outside
                            the server resource
                          items:
                            properties:
                              icmpCode:
                                type: string
                              icmpType:
                                type: string
                              name:
                                description: '[string] The name of the volume.'
                                type: string
                              portRangeEnd:
                                type: number
                              portRangeStart:
                                type: number
                              protocol:
                                type: string
                              sourceIp:
                                type: string
                              sourceMac:
                                type: string
                              targetIp:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        firewallActive:
                          type: boolean
                        firewallType:
                          type: string
                        ips:
                          description: Collection of IP addresses assigned to a nic.
                            Explicitly assigned public IPs need to come from reserved
                            IP blocks, Passing value null or empty array will assign
                            an IP address automatically.
                          items:
                            type: string
                          type: array
                        ipv6CidrBlock:
                          description: IPv6 CIDR block assigned to the NIC.
                          type: string
                        ipv6Ips:
                          description: Collection for IPv6 addresses assigned to a
                            nic. Explicitly assigned IPv6 addresses need to come from
                            inside the IPv6 CIDR block assigned to the nic.
                          items:
                            type: string
                          type: array
                        lan:
                          type: number
                        lanRef:
                          description: Reference to a Lan in compute to populate lan.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        lanSelector:
                          description: Selector for a Lan in compute to populate lan.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                      type: object
                    type: array
                  ram:
                    type: number
                  sshKeyPath:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud provided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation. This property is immutable.
                    items:
                      type: string
                    type: array
                  sshKeys:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                    items:
                      type: string
                    type: array
                  templateUuid:
                    type: string
                  type:
                    description: 'server usages: ENTERPRISE or CUBE'
                    type: string
                  vmState:
                    description: 'Sets the power state of the server. Possible values:
                      `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only
                      valid for cube. SHUTOFF state is only valid for enterprise'
                    type: string
                  volume:
                    items:
                      properties:
                        availabilityZone:
                          description: '[string] The storage availability zone assigned
                            to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                            is immutable'
                          type: string
                        backupUnitId:
                          description: |-
                            [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                            The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                          type: string
                        bus:
                          description: '[Boolean] The bus type of the volume: VIRTIO
                            or IDE.'
                          type: string
                        diskType:
                          description: '[string] The volume type: HDD or SSD. This
                            property is immutable.'
                          type: string
                        imagePassword:
                          description: '[string] Required if sshkey_path is not provided.'
                          type: string
                        licenceType:
                          description: '[string] Required if image_name is not provided.'
                          type: string
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                        size:
                          description: |-
                            [integer] The size of the volume in GB.
                            The size of the volume in GB.
                          type: number
                        sshKeyPath:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        sshKeys:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        userData:
                          description: |-
                            [string] The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. This option will work only with cloud-init compatible images.
                            The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  availabilityZone:
                    description: '[string] The storage availability zone assigned
                      to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                      is immutable'
                    type: string
                  bootCdrom:
                    description: The associated boot drive, if any. Must be the UUID
                      of a bootable CDROM image that you can retrieve using the image
                      data source
                    type: string
                  bootImage:
                    description: (Computed) The image or snapshot UUID.
                    type: string
                  cores:
                    type: number
                  cpuFamily:
                    type: string
                  datacenterId:
                    description: '[string] The ID of a Virtual Data Center.'
                    type: string
                  datacenterIdRef:
                    description: Reference to a Datacenter in compute to populate
                      datacenterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  datacenterIdSelector:
                    description: Selector for a Datacenter in compute to populate
                      datacenterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  firewallruleIds:
                    items:
                      type: string
                    type: array
                  imageName:
                    description: '[string] The name, ID or alias of the image. May
                      also be a snapshot ID. It is required if licence_type is not
                      provided. Attribute is immutable.'
                    type: string
                  imagePasswordSecretRef:
                    description: '[string] Required if sshkey_path is not provided.'
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  label:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  name:
                    description: '[string] The name of the volume.'
                    type: string
                  nic:
                    items:
                      properties:
                        dhcp:
                          type: boolean
                        dhcpv6:
                          description: Indicates whether this NIC receives an IPv6
                            address through DHCP.
                          type: boolean
                        firewall:
                          description: Firewall rules created in the server resource.
                            The rules can also be created as separate resources outside
                            the server resource
                          items:
                            properties:
                              icmpCode:
                                type: string
                              icmpType:
                                type: string
                              name:
                                description: '[string] The name of the volume.'
                                type: string
                              portRangeEnd:
                                type: number
                              portRangeStart:
                                type: number
                              protocol:
                                type: string
                              sourceIp:
                                type: string
                              sourceMac:
                                type: string
                              targetIp:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        firewallActive:
                          type: boolean
                        firewallType:
                          type: string
                        ips:
                          description: Collection of IP addresses assigned to a nic.
                            Explicitly assigned public IPs need to come from reserved
                            IP blocks, Passing value null or empty array will assign
                            an IP address automatically.
                          items:
                            type: string
                          type: array
                        ipv6CidrBlock:
                          description: IPv6 CIDR block assigned to the NIC.
                          type: string
                        ipv6Ips:
                          description: Collection for IPv6 addresses assigned to a
                            nic. Explicitly assigned IPv6 addresses need to come from
                            inside the IPv6 CIDR block assigned to the nic.
                          items:
                            type: string
                          type: array
                        lan:
                          type: number
                        lanRef:
                          description: Reference to a Lan in compute to populate lan.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        lanSelector:
                          description: Selector for a Lan in compute to populate lan.
                          properties:
                            matchControllerRef:
                              description: |-
                                MatchControllerRef ensures an object with the same controller reference
                                as the selecting object is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: |-
                                    Resolution specifies whether resolution of this reference is required.
                                    The default is 'Required', which means the reconcile will fail if the
                                    reference cannot be resolved. 'Optional' means this reference will be
                                    a no-op if it cannot be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: |-
                                    Resolve specifies when this reference should be resolved. The default
                                    is 'IfNotPresent', which will attempt to resolve the reference only when
                                    the corresponding field is not present. Use 'Always' to resolve the
                                    reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                      type: object
                    type: array
                  ram:
                    type: number
                  sshKeyPath:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud provided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation. This property is immutable.
                    items:
                      type: string
                    type: array
                  sshKeys:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                    items:
                      type: string
                    type: array
                  templateUuid:
                    type: string
                  type:
                    description: 'server usages: ENTERPRISE or CUBE'
                    type: string
                  vmState:
                    description: 'Sets the power state of the server. Possible values:
                      `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only
                      valid for cube. SHUTOFF state is only valid for enterprise'
                    type: string
                  volume:
                    items:
                      properties:
                        availabilityZone:
                          description: '[string] The storage availability zone assigned
                            to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                            is immutable'
                          type: string
                        backupUnitId:
                          description: |-
                            [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                            The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                          type: string
                        bus:
                          description: '[Boolean] The bus type of the volume: VIRTIO
                            or IDE.'
                          type: string
                        diskType:
                          description: '[string] The volume type: HDD or SSD. This
                            property is immutable.'
                          type: string
                        imagePassword:
                          description: '[string] Required if sshkey_path is not provided.'
                          type: string
                        licenceType:
                          description: '[string] Required if image_name is not provided.'
                          type: string
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                        size:
                          description: |-
                            [integer] The size of the volume in GB.
                            The size of the volume in GB.
                          type: number
                        sshKeyPath:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        sshKeys:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        userData:
                          description: |-
                            [string] The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. This option will work only with cloud-init compatible images.
                            The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.volume is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.volume)
                || (has(self.initProvider) && has(self.initProvider.volume))'
          status:
            description: ServerStatus defines the observed state of Server.
            properties:
              atProvider:
                properties:
                  availabilityZone:
                    description: '[string] The storage availability zone assigned
                      to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                      is immutable'
                    type: string
                  bootCdrom:
                    description: The associated boot drive, if any. Must be the UUID
                      of a bootable CDROM image that you can retrieve using the image
                      data source
                    type: string
                  bootImage:
                    description: (Computed) The image or snapshot UUID.
                    type: string
                  bootVolume:
                    type: string
                  cores:
                    type: number
                  cpuFamily:
                    type: string
                  datacenterId:
                    description: '[string] The ID of a Virtual Data Center.'
                    type: string
                  firewallruleId:
                    type: string
                  firewallruleIds:
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  imageName:
                    description: '[string] The name, ID or alias of the image. May
                      also be a snapshot ID. It is required if licence_type is not
                      provided. Attribute is immutable.'
                    type: string
                  inlineVolumeIds:
                    description: A list that contains the IDs for the volumes defined
                      inside the server resource.
                    items:
                      type: string
                    type: array
                  label:
                    items:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  name:
                    description: '[string] The name of the volume.'
                    type: string
                  nic:
                    items:
                      properties:
                        deviceNumber:
                          description: (Computed) The Logical Unit Number of the storage
                            volume. Null for volumes not mounted to any VM.
                          type: number
                        dhcp:
                          type: boolean
                        dhcpv6:
                          description: Indicates whether this NIC receives an IPv6
                            address through DHCP.
                          type: boolean
                        firewall:
                          description: Firewall rules created in the server resource.
                            The rules can also be created as separate resources outside
                            the server resource
                          items:
                            properties:
                              icmpCode:
                                type: string
                              icmpType:
                                type: string
                              id:
                                type: string
                              name:
                                description: '[string] The name of the volume.'
                                type: string
                              portRangeEnd:
                                type: number
                              portRangeStart:
                                type: number
                              protocol:
                                type: string
                              sourceIp:
                                type: string
                              sourceMac:
                                type: string
                              targetIp:
                                type: string
                              type:
                                type: string
                            type: object
                          type: array
                        firewallActive:
                          type: boolean
                        firewallType:
                          type: string
                        id:
                          type: string
                        ips:
                          description: Collection of IP addresses assigned to a nic.
                            Explicitly assigned public IPs need to come from reserved
                            IP blocks, Passing value null or empty array will assign
                            an IP address automatically.
                          items:
                            type: string
                          type: array
                        ipv6CidrBlock:
                          description: IPv6 CIDR block assigned to the NIC.
                          type: string
                        ipv6Ips:
                          description: Collection for IPv6 addresses assigned to a
                            nic. Explicitly assigned IPv6 addresses need to come from
                            inside the IPv6 CIDR block assigned to the nic.
                          items:
                            type: string
                          type: array
                        lan:
                          type: number
                        mac:
                          type: string
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                        pciSlot:
                          description: (Computed) The PCI slot number of the storage
                            volume. Null for volumes not mounted to any VM.
                          type: number
                      type: object
                    type: array
                  primaryIp:
                    type: string
                  primaryNic:
                    description: Id of the primary network interface
                    type: string
                  ram:
                    type: number
                  sshKeyPath:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Immutable List of absolute or relative paths to files containing public SSH key that will be injected into IonosCloud provided Linux images. Does not support `~` expansion to homedir in the given path. Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation. This property is immutable.
                    items:
                      type: string
                    type: array
                  sshKeys:
                    description: |-
                      [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                      Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                    items:
                      type: string
                    type: array
                  templateUuid:
                    type: string
                  type:
                    description: 'server usages: ENTERPRISE or CUBE'
                    type: string
                  vmState:
                    description: 'Sets the power state of the server. Possible values:
                      `RUNNING`, `SHUTOFF` or `SUSPENDED`. SUSPENDED state is only
                      valid for cube. SHUTOFF state is only valid for enterprise'
                    type: string
                  volume:
                    items:
                      properties:
                        availabilityZone:
                          description: '[string] The storage availability zone assigned
                            to the volume: AUTO, ZONE_1, ZONE_2, or ZONE_3. This property
                            is immutable'
                          type: string
                        backupUnitId:
                          description: |-
                            [string] The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                            The uuid of the Backup Unit that user has access to. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' in conjunction with this property.
                          type: string
                        bootServer:
                          description: |-
                            (Computed)[string] The UUID of the attached server.
                            The UUID of the attached server.
                          type: string
                        bus:
                          description: '[Boolean] The bus type of the volume: VIRTIO
                            or IDE.'
                          type: string
                        cpuHotPlug:
                          description: (Computed)[string] Is capable of CPU hot plug
                            (no reboot required)
                          type: boolean
                        deviceNumber:
                          description: (Computed) The Logical Unit Number of the storage
                            volume. Null for volumes not mounted to any VM.
                          type: number
                        discVirtioHotPlug:
                          description: (Computed)[string] Is capable of Virt-IO drive
                            hot plug (no reboot required)
                          type: boolean
                        discVirtioHotUnplug:
                          description: (Computed)[string] Is capable of Virt-IO drive
                            hot unplug (no reboot required). This works only for non-Windows
                            virtual Machines.
                          type: boolean
                        diskType:
                          description: '[string] The volume type: HDD or SSD. This
                            property is immutable.'
                          type: string
                        imagePassword:
                          description: '[string] Required if sshkey_path is not provided.'
                          type: string
                        licenceType:
                          description: '[string] Required if image_name is not provided.'
                          type: string
                        name:
                          description: '[string] The name of the volume.'
                          type: string
                        nicHotPlug:
                          description: (Computed)[string] Is capable of nic hot plug
                            (no reboot required)
                          type: boolean
                        nicHotUnplug:
                          description: (Computed)[string] Is capable of nic hot unplug
                            (no reboot required)
                          type: boolean
                        pciSlot:
                          description: (Computed) The PCI slot number of the storage
                            volume. Null for volumes not mounted to any VM.
                          type: number
                        ramHotPlug:
                          description: (Computed)[string] Is capable of memory hot
                            plug (no reboot required)
                          type: boolean
                        size:
                          description: |-
                            [integer] The size of the volume in GB.
                            The size of the volume in GB.
                          type: number
                        sshKeyPath:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        sshKeys:
                          description: |-
                            [list] List of absolute paths to files containing a public SSH key that will be injected into IonosCloud provided Linux images. Also accepts ssh keys directly. Required for IonosCloud Linux images. Required if image_password is not provided. This property is immutable.
                            Public SSH keys are set on the image as authorized keys for appropriate SSH login to the instance using the corresponding private key. This field may only be set in creation requests. When reading, it always returns null. SSH keys are only supported if a public Linux image is used for the volume creation.
                          items:
                            type: string
                          type: array
                        userData:
                          description: |-
                            [string] The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. This option will work only with cloud-init compatible images.
                            The cloud-init configuration for the volume as base64 encoded string. The property is immutable and is only allowed to be set on a new volume creation. It is mandatory to provide either 'public image' or 'imageAlias' that has cloud-init compatibility in conjunction with this property.
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
