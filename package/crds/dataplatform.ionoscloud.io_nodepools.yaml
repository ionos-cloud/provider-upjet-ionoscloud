---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: nodepools.dataplatform.ionoscloud.io
spec:
  group: dataplatform.ionoscloud.io
  names:
    categories:
    - crossplane
    - managed
    - ionos
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    singular: nodepool
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodePool is the Schema for the NodePools API. Creates and manages
          Dataplatform Node Pool objects.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NodePoolSpec defines the desired state of NodePool
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to node pool resource as Kubernetes annotations.
                      Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                    type: object
                    x-kubernetes-map-type: granular
                  autoScaling:
                    description: |-
                      [string] Whether the Node Pool should autoscale. For more details, please check the API documentation
                      The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
                    properties:
                      maxNodeCount:
                        description: |-
                          [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                          The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                        type: number
                      minNodeCount:
                        description: |-
                          [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                          The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                        type: number
                    type: object
                  availabilityZone:
                    description: |-
                      [string] The availability zone of the virtual datacenter region where the node pool resources should be provisioned. Must be set with one of the values AUTO, ZONE_1 or ZONE_2. The default value is AUTO.
                      The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
                    type: string
                  clusterId:
                    description: |-
                      [string] The UUID of an existing Dataplatform cluster.
                      The UUID of an existing Dataplatform cluster.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster in dataplatform to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster in dataplatform to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  coresCount:
                    description: |-
                      [int] The number of CPU cores per node. Must be set with a minimum value of 1. The default value is 4.
                      The number of CPU cores per node.
                    type: number
                  cpuFamily:
                    description: |-
                      [string] A valid CPU family name or AUTO if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource. The default value is AUTO.
                      A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to the node pool resource as Kubernetes labels.
                      Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    description: |-
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                    items:
                      properties:
                        dayOfTheWeek:
                          description: '[string] Must be set with one the values Monday,
                            Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday.'
                          type: string
                        time:
                          description: |-
                            [string] Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format. This pattern matches the "HH:MM:SS 24-hour format with leading 0" format. For more information take a look at this link.
                            Time at which the maintenance should start.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      [string] The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                      The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                    type: string
                  nodeCount:
                    description: |-
                      [int] The number of nodes that make up the node pool. Must be set with a minimum value of 1.
                      The number of nodes that make up the node pool.
                    type: number
                  ramSize:
                    description: |-
                      [int] The RAM size for one node in MB. Must be set in multiples of 1024MB, with a minimum size is of 2048MB. The default value is 4096.
                      The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
                    type: number
                  storageSize:
                    description: |-
                      [int] The size of the volume in GB. The size must be greater than 10GB. The default value is 20.
                      The size of the volume in GB. The size must be greater than 10GB.
                    type: number
                  storageType:
                    description: |-
                      [int] The type of hardware for the volume. Must be set with one of the values HDD or SSD. The default value is SSD.
                      The type of hardware for the volume.
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to node pool resource as Kubernetes annotations.
                      Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                    type: object
                    x-kubernetes-map-type: granular
                  autoScaling:
                    description: |-
                      [string] Whether the Node Pool should autoscale. For more details, please check the API documentation
                      The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
                    properties:
                      maxNodeCount:
                        description: |-
                          [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                          The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                        type: number
                      minNodeCount:
                        description: |-
                          [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                          The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                        type: number
                    type: object
                  availabilityZone:
                    description: |-
                      [string] The availability zone of the virtual datacenter region where the node pool resources should be provisioned. Must be set with one of the values AUTO, ZONE_1 or ZONE_2. The default value is AUTO.
                      The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
                    type: string
                  clusterId:
                    description: |-
                      [string] The UUID of an existing Dataplatform cluster.
                      The UUID of an existing Dataplatform cluster.
                    type: string
                  clusterIdRef:
                    description: Reference to a Cluster in dataplatform to populate
                      clusterId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  clusterIdSelector:
                    description: Selector for a Cluster in dataplatform to populate
                      clusterId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  coresCount:
                    description: |-
                      [int] The number of CPU cores per node. Must be set with a minimum value of 1. The default value is 4.
                      The number of CPU cores per node.
                    type: number
                  cpuFamily:
                    description: |-
                      [string] A valid CPU family name or AUTO if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource. The default value is AUTO.
                      A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to the node pool resource as Kubernetes labels.
                      Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    description: |-
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                    items:
                      properties:
                        dayOfTheWeek:
                          description: '[string] Must be set with one the values Monday,
                            Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday.'
                          type: string
                        time:
                          description: |-
                            [string] Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format. This pattern matches the "HH:MM:SS 24-hour format with leading 0" format. For more information take a look at this link.
                            Time at which the maintenance should start.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      [string] The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                      The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                    type: string
                  nodeCount:
                    description: |-
                      [int] The number of nodes that make up the node pool. Must be set with a minimum value of 1.
                      The number of nodes that make up the node pool.
                    type: number
                  ramSize:
                    description: |-
                      [int] The RAM size for one node in MB. Must be set in multiples of 1024MB, with a minimum size is of 2048MB. The default value is 4096.
                      The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
                    type: number
                  storageSize:
                    description: |-
                      [int] The size of the volume in GB. The size must be greater than 10GB. The default value is 20.
                      The size of the volume in GB. The size must be greater than 10GB.
                    type: number
                  storageType:
                    description: |-
                      [int] The type of hardware for the volume. Must be set with one of the values HDD or SSD. The default value is SSD.
                      The type of hardware for the volume.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.nodeCount is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.nodeCount)
                || (has(self.initProvider) && has(self.initProvider.nodeCount))'
          status:
            description: NodePoolStatus defines the observed state of NodePool.
            properties:
              atProvider:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to node pool resource as Kubernetes annotations.
                      Key-value pairs attached to node pool resource as [Kubernetes annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/)
                    type: object
                    x-kubernetes-map-type: granular
                  autoScaling:
                    description: |-
                      [string] Whether the Node Pool should autoscale. For more details, please check the API documentation
                      The range defining the minimum and maximum number of worker nodes that the managed node group can scale in
                    properties:
                      maxNodeCount:
                        description: |-
                          [int] The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                          The maximum number of worker nodes that the node pool can scale to. Should be greater than min_node_count
                        type: number
                      minNodeCount:
                        description: |-
                          [int] The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                          The minimum number of worker nodes the node pool can scale down to. Should be less than max_node_count
                        type: number
                    type: object
                  availabilityZone:
                    description: |-
                      [string] The availability zone of the virtual datacenter region where the node pool resources should be provisioned. Must be set with one of the values AUTO, ZONE_1 or ZONE_2. The default value is AUTO.
                      The availability zone of the virtual datacenter region where the node pool resources should be provisioned.
                    type: string
                  clusterId:
                    description: |-
                      [string] The UUID of an existing Dataplatform cluster.
                      The UUID of an existing Dataplatform cluster.
                    type: string
                  coresCount:
                    description: |-
                      [int] The number of CPU cores per node. Must be set with a minimum value of 1. The default value is 4.
                      The number of CPU cores per node.
                    type: number
                  cpuFamily:
                    description: |-
                      [string] A valid CPU family name or AUTO if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource. The default value is AUTO.
                      A valid CPU family name or `AUTO` if the platform shall choose the best fitting option. Available CPU architectures can be retrieved from the datacenter resource.
                    type: string
                  datacenterId:
                    description: The UUID of the virtual data center (VDC) in which
                      the nodepool is provisioned
                    type: string
                  id:
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      [map] Key-value pairs attached to the node pool resource as Kubernetes labels.
                      Key-value pairs attached to the node pool resource as [Kubernetes labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/)
                    type: object
                    x-kubernetes-map-type: granular
                  maintenanceWindow:
                    description: |-
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                      Starting time of a weekly 4 hour-long window, during which maintenance might occur in hh:mm:ss format
                    items:
                      properties:
                        dayOfTheWeek:
                          description: '[string] Must be set with one the values Monday,
                            Tuesday, Wednesday, Thursday, Friday, Saturday or Sunday.'
                          type: string
                        time:
                          description: |-
                            [string] Time at which the maintenance should start. Must conform to the 'HH:MM:SS' 24-hour format. This pattern matches the "HH:MM:SS 24-hour format with leading 0" format. For more information take a look at this link.
                            Time at which the maintenance should start.
                          type: string
                      type: object
                    type: array
                  name:
                    description: |-
                      [string] The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                      The name of your node pool. Must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]). It can contain dashes (-), underscores (_), dots (.), and alphanumerics in-between.
                    type: string
                  nodeCount:
                    description: |-
                      [int] The number of nodes that make up the node pool. Must be set with a minimum value of 1.
                      The number of nodes that make up the node pool.
                    type: number
                  ramSize:
                    description: |-
                      [int] The RAM size for one node in MB. Must be set in multiples of 1024MB, with a minimum size is of 2048MB. The default value is 4096.
                      The RAM size for one node in MB. Must be set in multiples of 1024 MB, with a minimum size is of 2048 MB.
                    type: number
                  storageSize:
                    description: |-
                      [int] The size of the volume in GB. The size must be greater than 10GB. The default value is 20.
                      The size of the volume in GB. The size must be greater than 10GB.
                    type: number
                  storageType:
                    description: |-
                      [int] The type of hardware for the volume. Must be set with one of the values HDD or SSD. The default value is SSD.
                      The type of hardware for the volume.
                    type: string
                  version:
                    description: The version of the Data Platform.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
