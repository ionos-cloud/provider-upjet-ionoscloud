apiVersion: vpn.ionos.m.upbound.io/v1alpha1
kind: IpsecGateway
metadata:
  annotations:
    meta.upbound.io/example-id: vpn/v1alpha1/ipsecgateway
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    connections:
    - datacenterIdSelector:
        matchLabels:
          testing.upbound.io/example-name: test_datacenter
      ipv4Cidr: 192.168.100.10/24
      lanIdSelector:
        matchLabels:
          testing.upbound.io/example-name: test_lan
    description: This gateway connects site A to VDC X.
    gatewayIp: ${ionoscloud_ipblock.test_ipblock.ips[0]}
    location: de/fra
    version: IKEv2

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Datacenter
metadata:
  annotations:
    meta.upbound.io/example-id: vpn/v1alpha1/ipsecgateway
  labels:
    testing.upbound.io/example-name: test_datacenter
  name: test-datacenter
  namespace: upbound-system
spec:
  forProvider:
    location: de/fra

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Ipblock
metadata:
  annotations:
    meta.upbound.io/example-id: vpn/v1alpha1/ipsecgateway
  labels:
    testing.upbound.io/example-name: test_ipblock
  name: test-ipblock
  namespace: upbound-system
spec:
  forProvider:
    location: de/fra
    size: 1

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Lan
metadata:
  annotations:
    meta.upbound.io/example-id: vpn/v1alpha1/ipsecgateway
  labels:
    testing.upbound.io/example-name: test_lan
  name: test-lan
  namespace: upbound-system
spec:
  forProvider:
    datacenterIdSelector:
      matchLabels:
        testing.upbound.io/example-name: test_datacenter
    public: false
