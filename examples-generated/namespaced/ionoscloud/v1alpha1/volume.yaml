apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Volume
metadata:
  annotations:
    meta.upbound.io/example-id: ionoscloud/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    availabilityZone: ZONE_1
    bus: VIRTIO
    datacenterIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    diskType: SSD Standard
    imageName: ${data.ionoscloud_image.example.name}
    imagePassword: ${random_password.volume_image_password.result}
    serverIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    size: 5
    userData: foo

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Datacenter
metadata:
  annotations:
    meta.upbound.io/example-id: ionoscloud/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    description: Datacenter Description
    location: us/las
    secAuthProtection: false

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Ipblock
metadata:
  annotations:
    meta.upbound.io/example-id: ionoscloud/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    location: us/las
    size: 4

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Lan
metadata:
  annotations:
    meta.upbound.io/example-id: ionoscloud/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    datacenterIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    public: true

---

apiVersion: ionoscloud.ionos.m.upbound.io/v1alpha1
kind: Server
metadata:
  annotations:
    meta.upbound.io/example-id: ionoscloud/v1alpha1/volume
  labels:
    testing.upbound.io/example-name: example
  name: example
  namespace: upbound-system
spec:
  forProvider:
    cores: 1
    datacenterIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    imageName: ${data.ionoscloud_image.example.name}
    imagePasswordSecretRef:
      key: attribute.result
      name: example-password
    nic:
    - dhcp: true
      firewall:
      - name: SSH
        portRangeEnd: 22
        portRangeStart: 22
        protocol: TCP
        sourceIp: ${ionoscloud_ipblock.example.ips[2]}
        sourceMac: 00:0a:95:9d:68:17
        targetIp: ${ionoscloud_ipblock.example.ips[3]}
        type: EGRESS
      firewallActive: true
      firewallType: BIDIRECTIONAL
      ips:
      - ${ionoscloud_ipblock.example.ips[0]}
      - ${ionoscloud_ipblock.example.ips[1]}
      lanSelector:
        matchLabels:
          testing.upbound.io/example-name: example
      name: system
    ram: 1024
    type: ENTERPRISE
    volume:
    - availabilityZone: ZONE_1
      bus: VIRTIO
      diskType: SSD Standard
      name: system
      size: 5
      userData: foo
